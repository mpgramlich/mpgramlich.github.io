<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>Modestus Moon OS: /home/loudish/modustus-cs450/mpx-spring2017-modestus/mpx_core/modules/R1/include/comm_list.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Modestus Moon OS
   &#160;<span id="projectnumber">R3/R4</span>
   </div>
   <div id="projectbrief">CS 450 project</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('comm__list_8h.html','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">comm_list.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="input_8h_source.html">input.h</a>&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for comm_list.h:</div>
<div class="dyncontent">
<div class="center"><img src="comm__list_8h__incl.png" border="0" usemap="#_2home_2loudish_2modustus-cs450_2mpx-spring2017-modestus_2mpx__core_2modules_2_r1_2include_2comm__list_8h" alt=""/></div>
<map name="_2home_2loudish_2modustus-cs450_2mpx-spring2017-modestus_2mpx__core_2modules_2_r1_2include_2comm__list_8h" id="_2home_2loudish_2modustus-cs450_2mpx-spring2017-modestus_2mpx__core_2modules_2_r1_2include_2comm__list_8h">
<area shape="rect" id="node2" href="input_8h.html" title="input.h" alt="" coords="74,109,135,136"/>
</map>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="comm__list_8h__dep__incl.png" border="0" usemap="#_2home_2loudish_2modustus-cs450_2mpx-spring2017-modestus_2mpx__core_2modules_2_r1_2include_2comm__list_8hdep" alt=""/></div>
<map name="_2home_2loudish_2modustus-cs450_2mpx-spring2017-modestus_2mpx__core_2modules_2_r1_2include_2comm__list_8hdep" id="_2home_2loudish_2modustus-cs450_2mpx-spring2017-modestus_2mpx__core_2modules_2_r1_2include_2comm__list_8hdep">
<area shape="rect" id="node2" href="comm__list_8c.html" title="/home/loudish/mpx&#45;spring2017\l&#45;modestus/mpx_core/modules\l/R1/comm_list.c" alt="" coords="5,109,204,165"/>
<area shape="rect" id="node3" href="commhand_8c.html" title="/home/loudish/mpx&#45;spring2017\l&#45;modestus/mpx_core/modules\l/R1/commhand.c" alt="" coords="228,109,427,165"/>
</map>
</div>
</div>
<p><a href="comm__list_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structs__cmd__struct.html">s_cmd_struct</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a13a1c44288a1d29092e5a6fb152b4861"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a13a1c44288a1d29092e5a6fb152b4861">MAX_CMD_LIST_LENGTH</a>&#160;&#160;&#160;50</td></tr>
<tr class="separator:a13a1c44288a1d29092e5a6fb152b4861"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a99317249ae7aceea39e3c447270bc2b6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structs__cmd__struct.html">s_cmd_struct</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a99317249ae7aceea39e3c447270bc2b6">cmd_struct_t</a></td></tr>
<tr class="separator:a99317249ae7aceea39e3c447270bc2b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a63e5b5d633e0beec232fe5765124ad7e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a63e5b5d633e0beec232fe5765124ad7e">getNumDaysInMonth</a> (int month, int year)</td></tr>
<tr class="memdesc:a63e5b5d633e0beec232fe5765124ad7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">getNumDaysInMonth is a helper function to allow the easy retrieval of days in a month based on the month input by the user.  <a href="#a63e5b5d633e0beec232fe5765124ad7e">More...</a><br /></td></tr>
<tr class="separator:a63e5b5d633e0beec232fe5765124ad7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123c1c0d25a5a737a49a812d4bfd5d8d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="separator:a123c1c0d25a5a737a49a812d4bfd5d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4729cc64f3f6ec814af70e26c9ab9ca"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#af4729cc64f3f6ec814af70e26c9ab9ca">helpFunc</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:af4729cc64f3f6ec814af70e26c9ab9ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpFunc calls the other help functions  <a href="#af4729cc64f3f6ec814af70e26c9ab9ca">More...</a><br /></td></tr>
<tr class="separator:af4729cc64f3f6ec814af70e26c9ab9ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97ee70a8770dc30d06c744b24eb2fcfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a97ee70a8770dc30d06c744b24eb2fcfc">help</a> ()</td></tr>
<tr class="memdesc:a97ee70a8770dc30d06c744b24eb2fcfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">help prints out a list of all possible commands and a brief description of what they do.  <a href="#a97ee70a8770dc30d06c744b24eb2fcfc">More...</a><br /></td></tr>
<tr class="separator:a97ee70a8770dc30d06c744b24eb2fcfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0721512217377ef46085ce000a6daf4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#aa0721512217377ef46085ce000a6daf4">helpGetVersion</a> ()</td></tr>
<tr class="memdesc:aa0721512217377ef46085ce000a6daf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpGetVersion prints the help instructions for version. Tells the user what the command and arguments for 'version' are.  <a href="#aa0721512217377ef46085ce000a6daf4">More...</a><br /></td></tr>
<tr class="separator:aa0721512217377ef46085ce000a6daf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f223b2f9d2c4887ab9d4943a565a20f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a0f223b2f9d2c4887ab9d4943a565a20f">helpGetDate</a> ()</td></tr>
<tr class="memdesc:a0f223b2f9d2c4887ab9d4943a565a20f"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpGetDate prints the help instructions for get date. Tells the user what the command and arguments for 'get date' are.  <a href="#a0f223b2f9d2c4887ab9d4943a565a20f">More...</a><br /></td></tr>
<tr class="separator:a0f223b2f9d2c4887ab9d4943a565a20f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a315b74fd1af8e5c10ae8fea09a7f1343"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a315b74fd1af8e5c10ae8fea09a7f1343">helpSetDate</a> ()</td></tr>
<tr class="memdesc:a315b74fd1af8e5c10ae8fea09a7f1343"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpSetDate prints the help instructions for set date. Tells the user what the command and arguments for 'set date' are.  <a href="#a315b74fd1af8e5c10ae8fea09a7f1343">More...</a><br /></td></tr>
<tr class="separator:a315b74fd1af8e5c10ae8fea09a7f1343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab023cd64db7b635c8e4048430fdd51c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ab023cd64db7b635c8e4048430fdd51c9">helpGetTime</a> ()</td></tr>
<tr class="memdesc:ab023cd64db7b635c8e4048430fdd51c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpGetTime prints the help instructions for get time. Tells the user what the commands and arguments for 'get time' are.  <a href="#ab023cd64db7b635c8e4048430fdd51c9">More...</a><br /></td></tr>
<tr class="separator:ab023cd64db7b635c8e4048430fdd51c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38bedc7695ebaf1fddec31cac15327b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a38bedc7695ebaf1fddec31cac15327b0">helpSetTime</a> ()</td></tr>
<tr class="memdesc:a38bedc7695ebaf1fddec31cac15327b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpSetTime prints the help instructions for set time. Tells the user what the command and arguments for 'set time' are.  <a href="#a38bedc7695ebaf1fddec31cac15327b0">More...</a><br /></td></tr>
<tr class="separator:a38bedc7695ebaf1fddec31cac15327b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af128492f8bc92a7110f7e2de0bf26fa0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#af128492f8bc92a7110f7e2de0bf26fa0">helpShutdown</a> ()</td></tr>
<tr class="memdesc:af128492f8bc92a7110f7e2de0bf26fa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpShutdown prints the help instructions for set date. Tells the user what the command and arguments for 'set date' are.  <a href="#af128492f8bc92a7110f7e2de0bf26fa0">More...</a><br /></td></tr>
<tr class="separator:af128492f8bc92a7110f7e2de0bf26fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b64cff6b85c2b7edb02636de6e9d2ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a6b64cff6b85c2b7edb02636de6e9d2ba">helpVersion</a> ()</td></tr>
<tr class="memdesc:a6b64cff6b85c2b7edb02636de6e9d2ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpVersion prints the help instructions for using the version command. No arguments are required.  <a href="#a6b64cff6b85c2b7edb02636de6e9d2ba">More...</a><br /></td></tr>
<tr class="separator:a6b64cff6b85c2b7edb02636de6e9d2ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7390c4786bfe500bab96f1e0439902a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ae7390c4786bfe500bab96f1e0439902a">helpDate</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:ae7390c4786bfe500bab96f1e0439902a"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpDate prints out the help information for date, for date &ndash;set and date &ndash;get  <a href="#ae7390c4786bfe500bab96f1e0439902a">More...</a><br /></td></tr>
<tr class="separator:ae7390c4786bfe500bab96f1e0439902a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ade66f75a1cf0af90a2e983c6d4e656"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a4ade66f75a1cf0af90a2e983c6d4e656">helpTime</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a4ade66f75a1cf0af90a2e983c6d4e656"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpTime prints out the help information for time, for time &ndash;set and time &ndash;get  <a href="#a4ade66f75a1cf0af90a2e983c6d4e656">More...</a><br /></td></tr>
<tr class="separator:a4ade66f75a1cf0af90a2e983c6d4e656"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f65434c6dfc1eb5b97d4dba4f923dc4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a1f65434c6dfc1eb5b97d4dba4f923dc4">helpPcb</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a1f65434c6dfc1eb5b97d4dba4f923dc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpPcb takes in the command to print the help information for. Calls the proper function to print the help information for the selected command.  <a href="#a1f65434c6dfc1eb5b97d4dba4f923dc4">More...</a><br /></td></tr>
<tr class="separator:a1f65434c6dfc1eb5b97d4dba4f923dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5bf868baaa12963086a0aa11c632159"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ad5bf868baaa12963086a0aa11c632159">helpPcbPrint</a> ()</td></tr>
<tr class="memdesc:ad5bf868baaa12963086a0aa11c632159"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpPcbPrint prints out the commands for PCBs.  <a href="#ad5bf868baaa12963086a0aa11c632159">More...</a><br /></td></tr>
<tr class="separator:ad5bf868baaa12963086a0aa11c632159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c4cb1d2574709bc85d25706f5534cf4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a5c4cb1d2574709bc85d25706f5534cf4">helpSuspendPCB</a> ()</td></tr>
<tr class="memdesc:a5c4cb1d2574709bc85d25706f5534cf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpSuspendPCB prints the help instructions for the suspendPCB command.  <a href="#a5c4cb1d2574709bc85d25706f5534cf4">More...</a><br /></td></tr>
<tr class="separator:a5c4cb1d2574709bc85d25706f5534cf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba83fcaebd5841ba00582be3913d012d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#aba83fcaebd5841ba00582be3913d012d">helpResumePCB</a> ()</td></tr>
<tr class="memdesc:aba83fcaebd5841ba00582be3913d012d"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpResumePCB prints out the parameters and usage of the resume pcb command.  <a href="#aba83fcaebd5841ba00582be3913d012d">More...</a><br /></td></tr>
<tr class="separator:aba83fcaebd5841ba00582be3913d012d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace39d9c4df8b991ae1db257969f511f3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ace39d9c4df8b991ae1db257969f511f3">helpSetPriority</a> ()</td></tr>
<tr class="memdesc:ace39d9c4df8b991ae1db257969f511f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpSetPriority prints out to console the parameters and usage for &ndash;setpriority.  <a href="#ace39d9c4df8b991ae1db257969f511f3">More...</a><br /></td></tr>
<tr class="separator:ace39d9c4df8b991ae1db257969f511f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f9ff33592233864136430a150026353"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a8f9ff33592233864136430a150026353">helpShowPCB</a> ()</td></tr>
<tr class="separator:a8f9ff33592233864136430a150026353"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c49565baaff2aec112f4d99d63058f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a20c49565baaff2aec112f4d99d63058f">helpShowAllProcesses</a> ()</td></tr>
<tr class="memdesc:a20c49565baaff2aec112f4d99d63058f"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpShowAllProcesses shows all processes in the system. Takes in no parameters and prints out to the console.  <a href="#a20c49565baaff2aec112f4d99d63058f">More...</a><br /></td></tr>
<tr class="separator:a20c49565baaff2aec112f4d99d63058f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc0abad04f83d121f3c7d8f4e08eade7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#afc0abad04f83d121f3c7d8f4e08eade7">helpShowReadyProcesses</a> ()</td></tr>
<tr class="memdesc:afc0abad04f83d121f3c7d8f4e08eade7"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpShowReadyProcesses shows the parameters and usage for showing ready PCBs.  <a href="#afc0abad04f83d121f3c7d8f4e08eade7">More...</a><br /></td></tr>
<tr class="separator:afc0abad04f83d121f3c7d8f4e08eade7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42841eb74573504baa22dd0c76ca83e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a42841eb74573504baa22dd0c76ca83e9">helpShowBlockedProcesses</a> ()</td></tr>
<tr class="memdesc:a42841eb74573504baa22dd0c76ca83e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpShowBlockedProcesses shows the parameters and usage for showing the blocked PCBs.  <a href="#a42841eb74573504baa22dd0c76ca83e9">More...</a><br /></td></tr>
<tr class="separator:a42841eb74573504baa22dd0c76ca83e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72381b23fce4dc8d86d6ef7fbc440eda"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a72381b23fce4dc8d86d6ef7fbc440eda">helpCreatePCB</a> ()</td></tr>
<tr class="memdesc:a72381b23fce4dc8d86d6ef7fbc440eda"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpCreatePCB prints out the parameters and usage for createPCB.  <a href="#a72381b23fce4dc8d86d6ef7fbc440eda">More...</a><br /></td></tr>
<tr class="separator:a72381b23fce4dc8d86d6ef7fbc440eda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a603af725d8289ae121f4ba45d55e654f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a603af725d8289ae121f4ba45d55e654f">helpDeletePCB</a> ()</td></tr>
<tr class="memdesc:a603af725d8289ae121f4ba45d55e654f"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpDeletePCB prints out the parameters and usage for deleting a PCB.  <a href="#a603af725d8289ae121f4ba45d55e654f">More...</a><br /></td></tr>
<tr class="separator:a603af725d8289ae121f4ba45d55e654f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35106b0a99fb607930e3caa5f2a88974"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a35106b0a99fb607930e3caa5f2a88974">helpBlockPCB</a> ()</td></tr>
<tr class="memdesc:a35106b0a99fb607930e3caa5f2a88974"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpBlockPCB prints out the parameters and usage for blocking a PCB.  <a href="#a35106b0a99fb607930e3caa5f2a88974">More...</a><br /></td></tr>
<tr class="separator:a35106b0a99fb607930e3caa5f2a88974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f4de74d76cc04ea63e4f253fcdf5aec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a2f4de74d76cc04ea63e4f253fcdf5aec">helpUnblockPCB</a> ()</td></tr>
<tr class="memdesc:a2f4de74d76cc04ea63e4f253fcdf5aec"><td class="mdescLeft">&#160;</td><td class="mdescRight">helpUnblockPCB prints out the parameters and usage for unblocking a PCB.  <a href="#a2f4de74d76cc04ea63e4f253fcdf5aec">More...</a><br /></td></tr>
<tr class="separator:a2f4de74d76cc04ea63e4f253fcdf5aec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab21bb30658e69c3d4906e435384fa5fd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ab21bb30658e69c3d4906e435384fa5fd">version</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:ab21bb30658e69c3d4906e435384fa5fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">version prints out the current version of the operating system. It will print out R1, R2, R3, ... depending on the current module.  <a href="#ab21bb30658e69c3d4906e435384fa5fd">More...</a><br /></td></tr>
<tr class="separator:ab21bb30658e69c3d4906e435384fa5fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b5b0b260a749c7a0371b96f079b9d69"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a2b5b0b260a749c7a0371b96f079b9d69">date</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="separator:a2b5b0b260a749c7a0371b96f079b9d69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affb6f9c7b2c1d585677a5bba1da35c06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#affb6f9c7b2c1d585677a5bba1da35c06">getDate</a> ()</td></tr>
<tr class="memdesc:affb6f9c7b2c1d585677a5bba1da35c06"><td class="mdescLeft">&#160;</td><td class="mdescRight">getDate Get the current date from the system.  <a href="#affb6f9c7b2c1d585677a5bba1da35c06">More...</a><br /></td></tr>
<tr class="separator:affb6f9c7b2c1d585677a5bba1da35c06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb304e34ec42b6fa3df07249ce8c1b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#abcb304e34ec42b6fa3df07249ce8c1b7">setDate</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:abcb304e34ec42b6fa3df07249ce8c1b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">setDate sets the system date using the input from the user.  <a href="#abcb304e34ec42b6fa3df07249ce8c1b7">More...</a><br /></td></tr>
<tr class="separator:abcb304e34ec42b6fa3df07249ce8c1b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dac732108bdce081376535bd2d51221"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a5dac732108bdce081376535bd2d51221">time</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="separator:a5dac732108bdce081376535bd2d51221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c7c164fd3c7dea7004ece3c6251fc94"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a1c7c164fd3c7dea7004ece3c6251fc94">getTime</a> ()</td></tr>
<tr class="memdesc:a1c7c164fd3c7dea7004ece3c6251fc94"><td class="mdescLeft">&#160;</td><td class="mdescRight">getTime this function has the side-effect of printing the current time to the terminal.  <a href="#a1c7c164fd3c7dea7004ece3c6251fc94">More...</a><br /></td></tr>
<tr class="separator:a1c7c164fd3c7dea7004ece3c6251fc94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684ac3c738428c05031f6b5c5b121d85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a684ac3c738428c05031f6b5c5b121d85">setTime</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a684ac3c738428c05031f6b5c5b121d85"><td class="mdescLeft">&#160;</td><td class="mdescRight">setTime sets the current system time from the users input.  <a href="#a684ac3c738428c05031f6b5c5b121d85">More...</a><br /></td></tr>
<tr class="separator:a684ac3c738428c05031f6b5c5b121d85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a514416c2792fdc8614585266d618fbf8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a514416c2792fdc8614585266d618fbf8">shutdownFunc</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a514416c2792fdc8614585266d618fbf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">shutdownFunc shuts down the OS.  <a href="#a514416c2792fdc8614585266d618fbf8">More...</a><br /></td></tr>
<tr class="separator:a514416c2792fdc8614585266d618fbf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac903af80a2e0afe97b30f5ca88a1505a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ac903af80a2e0afe97b30f5ca88a1505a">pcbFunc</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="separator:ac903af80a2e0afe97b30f5ca88a1505a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb12aae9347bfdc11c97b2c89c448ce2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#adb12aae9347bfdc11c97b2c89c448ce2">suspendPCB</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:adb12aae9347bfdc11c97b2c89c448ce2"><td class="mdescLeft">&#160;</td><td class="mdescRight">suspendPCB suspends the pcb passed in by the user  <a href="#adb12aae9347bfdc11c97b2c89c448ce2">More...</a><br /></td></tr>
<tr class="separator:adb12aae9347bfdc11c97b2c89c448ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a672eae99ab4e3da15306bc6df644bb50"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a672eae99ab4e3da15306bc6df644bb50">resumePCB</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a672eae99ab4e3da15306bc6df644bb50"><td class="mdescLeft">&#160;</td><td class="mdescRight">resumePCB resumes the PCB passed in by the user  <a href="#a672eae99ab4e3da15306bc6df644bb50">More...</a><br /></td></tr>
<tr class="separator:a672eae99ab4e3da15306bc6df644bb50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab805f90ac929c70cff3798e6de1f1381"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ab805f90ac929c70cff3798e6de1f1381">setPriority</a> (char *procName, char *procPrio)</td></tr>
<tr class="memdesc:ab805f90ac929c70cff3798e6de1f1381"><td class="mdescLeft">&#160;</td><td class="mdescRight">setPriority sets the priority of a particular process  <a href="#ab805f90ac929c70cff3798e6de1f1381">More...</a><br /></td></tr>
<tr class="separator:ab805f90ac929c70cff3798e6de1f1381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b84e5992ebbf428fc68351c9453e52e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a9b84e5992ebbf428fc68351c9453e52e"><td class="mdescLeft">&#160;</td><td class="mdescRight">showPCB shows the process information for the process requested by the user  <a href="#a9b84e5992ebbf428fc68351c9453e52e">More...</a><br /></td></tr>
<tr class="separator:a9b84e5992ebbf428fc68351c9453e52e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15a1fce149a24a3c2925b6ca44cb79c7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a15a1fce149a24a3c2925b6ca44cb79c7">showAllProcesses</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a15a1fce149a24a3c2925b6ca44cb79c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">showAllProcesses shows all processes in the system.  <a href="#a15a1fce149a24a3c2925b6ca44cb79c7">More...</a><br /></td></tr>
<tr class="separator:a15a1fce149a24a3c2925b6ca44cb79c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc0ff5bef60dfc962f4455492297a191"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#abc0ff5bef60dfc962f4455492297a191">showReadyProcesses</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:abc0ff5bef60dfc962f4455492297a191"><td class="mdescLeft">&#160;</td><td class="mdescRight">showReadyProcesses shows all processes that are ready, in the ready queue (linked list).  <a href="#abc0ff5bef60dfc962f4455492297a191">More...</a><br /></td></tr>
<tr class="separator:abc0ff5bef60dfc962f4455492297a191"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea06cb173ad17f9139253574d010d678"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#aea06cb173ad17f9139253574d010d678">showBlockedProcesses</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:aea06cb173ad17f9139253574d010d678"><td class="mdescLeft">&#160;</td><td class="mdescRight">showBlockedProcesses shows all processes that are blocked.  <a href="#aea06cb173ad17f9139253574d010d678">More...</a><br /></td></tr>
<tr class="separator:aea06cb173ad17f9139253574d010d678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af036a4bf4166ff125a281e01f6d2e84f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#af036a4bf4166ff125a281e01f6d2e84f">createPCB</a> (const char *pcbName, const char *pcbPriority, const char *pcbClass)</td></tr>
<tr class="memdesc:af036a4bf4166ff125a281e01f6d2e84f"><td class="mdescLeft">&#160;</td><td class="mdescRight">createPCB creates a new PCB and allocates memory for the PCB.  <a href="#af036a4bf4166ff125a281e01f6d2e84f">More...</a><br /></td></tr>
<tr class="separator:af036a4bf4166ff125a281e01f6d2e84f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3602fa2889ad77ef2f323f6db3dd967e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a3602fa2889ad77ef2f323f6db3dd967e">deletePCB</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:a3602fa2889ad77ef2f323f6db3dd967e"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletePCB deletes the PCB requested by the user.  <a href="#a3602fa2889ad77ef2f323f6db3dd967e">More...</a><br /></td></tr>
<tr class="separator:a3602fa2889ad77ef2f323f6db3dd967e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c8690ef4431e1629f9ab7c5539eeae"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#af8c8690ef4431e1629f9ab7c5539eeae">blockPCB</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:af8c8690ef4431e1629f9ab7c5539eeae"><td class="mdescLeft">&#160;</td><td class="mdescRight">blockPCB blocks the specified PCB  <a href="#af8c8690ef4431e1629f9ab7c5539eeae">More...</a><br /></td></tr>
<tr class="separator:af8c8690ef4431e1629f9ab7c5539eeae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac26704b8c23bbe0e0fdf8e838915e29d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#ac26704b8c23bbe0e0fdf8e838915e29d">unblockPCB</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:ac26704b8c23bbe0e0fdf8e838915e29d"><td class="mdescLeft">&#160;</td><td class="mdescRight">unblockPCB unblocks the specified PCB.  <a href="#ac26704b8c23bbe0e0fdf8e838915e29d">More...</a><br /></td></tr>
<tr class="separator:ac26704b8c23bbe0e0fdf8e838915e29d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc524ab0eefdb42c7b8432b587a781e1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___r3.html#gafc524ab0eefdb42c7b8432b587a781e1">yield</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:gafc524ab0eefdb42c7b8432b587a781e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">stops the exection of commhand and executes each process in the ready queue  <a href="group___r3.html#gafc524ab0eefdb42c7b8432b587a781e1">More...</a><br /></td></tr>
<tr class="separator:gafc524ab0eefdb42c7b8432b587a781e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga70f2cab9ebef7e5f74ea607c4f25dd5c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___r3.html#ga70f2cab9ebef7e5f74ea607c4f25dd5c">loadr3</a> (char parameters[][<a class="el" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>])</td></tr>
<tr class="memdesc:ga70f2cab9ebef7e5f74ea607c4f25dd5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">loads all processes into memory in a suspended ready state at any priority of the users choosing  <a href="group___r3.html#ga70f2cab9ebef7e5f74ea607c4f25dd5c">More...</a><br /></td></tr>
<tr class="separator:ga70f2cab9ebef7e5f74ea607c4f25dd5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95b7dfd9ea5945e05a5e443355de389e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a95b7dfd9ea5945e05a5e443355de389e">initCmdArray</a> (<a class="el" href="comm__list_8h.html#a99317249ae7aceea39e3c447270bc2b6">cmd_struct_t</a> *arr)</td></tr>
<tr class="separator:a95b7dfd9ea5945e05a5e443355de389e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a7ec0161c488281f85601e9f92d9226bd"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structs__cmd__struct.html">s_cmd_struct</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a7ec0161c488281f85601e9f92d9226bd">__attribute__</a></td></tr>
<tr class="separator:a7ec0161c488281f85601e9f92d9226bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5582c68677f88e6cacb6b1a2086f34c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="comm__list_8h.html#a99317249ae7aceea39e3c447270bc2b6">cmd_struct_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="comm__list_8h.html#a5582c68677f88e6cacb6b1a2086f34c1">cmdArray</a> [<a class="el" href="comm__list_8h.html#a13a1c44288a1d29092e5a6fb152b4861">MAX_CMD_LIST_LENGTH</a>]</td></tr>
<tr class="separator:a5582c68677f88e6cacb6b1a2086f34c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a13a1c44288a1d29092e5a6fb152b4861"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX_CMD_LIST_LENGTH&#160;&#160;&#160;50</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8h_source.html#l00006">6</a> of file <a class="el" href="comm__list_8h_source.html">comm_list.h</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00036">exec_comm()</a>.</p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a99317249ae7aceea39e3c447270bc2b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structs__cmd__struct.html">s_cmd_struct</a> <a class="el" href="comm__list_8h.html#a99317249ae7aceea39e3c447270bc2b6">cmd_struct_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8h_source.html#l00008">8</a> of file <a class="el" href="comm__list_8h_source.html">comm_list.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="af8c8690ef4431e1629f9ab7c5539eeae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int blockPCB </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>blockPCB blocks the specified PCB </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in the name of the PCB to move to the blocked queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00704">704</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8h_source.html#l00048">BLOCKED</a>, <a class="el" href="pcb_8c_source.html#l00168">changeProcessState()</a>, <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="comm__list_8c_source.html#l00647">showPCB()</a>, and <a class="el" href="pcb_8h_source.html#l00039">SUCCESS</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                                            {</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a> retVal = <a class="code" href="group___r2.html#ga69ffbf50820bccd94857e1d25b68b2c3">changeProcessState</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)parameters[0], <a class="code" href="pcb_8h.html#a8461d6c03c00b03bad59b5a29d27b902a376c1b6a3f75d283a2efacf737438d61">BLOCKED</a>);</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <span class="keywordflow">if</span>(retVal == <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a>)</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    {</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <a class="code" href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a>(parameters);</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    }</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(retVal));</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment">//    const char* name = (const char*)parameters[0];</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment">//    changeProcessState(name, BLOCKED);</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="comment">//    return 0;</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;}</div><div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="comm__list_8c_html_a9b84e5992ebbf428fc68351c9453e52e"><div class="ttname"><a href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a></div><div class="ttdeci">int showPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showPCB shows the process information for the process requested by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00647">comm_list.c:647</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
<div class="ttc" id="pcb_8h_html_a8461d6c03c00b03bad59b5a29d27b902a376c1b6a3f75d283a2efacf737438d61"><div class="ttname"><a href="pcb_8h.html#a8461d6c03c00b03bad59b5a29d27b902a376c1b6a3f75d283a2efacf737438d61">BLOCKED</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00048">pcb.h:48</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t</div><div class="ttdoc">The e_PCB_ERROR_CODE_t enum defines the return status of functions working with PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
<div class="ttc" id="group___r2_html_ga69ffbf50820bccd94857e1d25b68b2c3"><div class="ttname"><a href="group___r2.html#ga69ffbf50820bccd94857e1d25b68b2c3">changeProcessState</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t changeProcessState(const char *processName, e_PROCESS_STATE_t state)</div><div class="ttdoc">changeProcessState changes the state of the process being called </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00168">pcb.c:168</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af036a4bf4166ff125a281e01f6d2e84f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int createPCB </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pcbName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pcbPriority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pcbClass</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>createPCB creates a new PCB and allocates memory for the PCB. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pcbName</td><td>the name of the PCB to be created </td></tr>
    <tr><td class="paramname">pcbPriority</td><td>the priority of the PCB to be created </td></tr>
    <tr><td class="paramname">pcbClass</td><td>the class of the PCB to be created </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00683">683</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="string_8c_source.html#l00046">atoi()</a>, <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="pcb_8c_source.html#l00013">prevPCBError</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="pcb_8c_source.html#l00071">setupPCB()</a>, and <a class="el" href="pcb_8c_source.html#l00328">stringToClass()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                                                                  {</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    <a class="code" href="pcb_8h.html#a9928a07bb6f59213464656fdab142e70">setupPCB</a>(pcbName, <a class="code" href="group___r2.html#gae81b3dd13059be0733193c53681ca440">stringToClass</a>(pcbClass), <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(pcbPriority));</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <span class="comment">//printf(&quot;Clas String %s: num %d\r\n&quot;, pcbClass, (int) stringToClass(pcbClass));</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(<a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>));</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;}</div><div class="ttc" id="pcb_8h_html_a8e319ed5099e8558e03c1bdd25c9559a"><div class="ttname"><a href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t prevPCBError</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00013">pcb.c:13</a></div></div>
<div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="group___r2_html_gae81b3dd13059be0733193c53681ca440"><div class="ttname"><a href="group___r2.html#gae81b3dd13059be0733193c53681ca440">stringToClass</a></div><div class="ttdeci">e_PROCESS_CLASS_t stringToClass(const char *stringifiedClass)</div><div class="ttdoc">stringToClass returns the enum representation of a string </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00328">pcb.c:328</a></div></div>
<div class="ttc" id="string_8h_html_a30670a60464f77af17dfb353353d6df8"><div class="ttname"><a href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a></div><div class="ttdeci">int atoi(const char *s)</div><div class="ttdoc">atoi converts and ASCII string to an integer </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00046">string.c:46</a></div></div>
<div class="ttc" id="pcb_8h_html_a9928a07bb6f59213464656fdab142e70"><div class="ttname"><a href="pcb_8h.html#a9928a07bb6f59213464656fdab142e70">setupPCB</a></div><div class="ttdeci">pcb_t * setupPCB(const char *processName, e_PROCESS_CLASS_t processClass, processPriority_t processPriority)</div><div class="ttdoc">setupPCB calls allocatePCB, initializes the PCB with the arguments and sets it state to ready ...</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00071">pcb.c:71</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2b5b0b260a749c7a0371b96f079b9d69"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int date </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00350">350</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="comm__list_8c_source.html#l00361">getDate()</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="comm__list_8c_source.html#l00367">setDate()</a>, and <a class="el" href="string_8c_source.html#l00077">strcmp()</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00172">initCmdArray()</a>.</p>
<div class="fragment"><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                        {</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--get&quot;</span>)) {</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <a class="code" href="comm__list_8c.html#affb6f9c7b2c1d585677a5bba1da35c06">getDate</a>();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--set&quot;</span>)) {</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <a class="code" href="comm__list_8c.html#abcb304e34ec42b6fa3df07249ce8c1b7">setDate</a>(&amp;parameters[1]);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Check your input, there are only 12 months in a year.&quot;</span>);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;}</div><div class="ttc" id="comm__list_8c_html_affb6f9c7b2c1d585677a5bba1da35c06"><div class="ttname"><a href="comm__list_8c.html#affb6f9c7b2c1d585677a5bba1da35c06">getDate</a></div><div class="ttdeci">void getDate()</div><div class="ttdoc">getDate Get the current date from the system. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00361">comm_list.c:361</a></div></div>
<div class="ttc" id="comm__list_8c_html_abcb304e34ec42b6fa3df07249ce8c1b7"><div class="ttname"><a href="comm__list_8c.html#abcb304e34ec42b6fa3df07249ce8c1b7">setDate</a></div><div class="ttdeci">void setDate(char parameters[][MAX_LENGTH])</div><div class="ttdoc">setDate sets the system date using the input from the user. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00367">comm_list.c:367</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3602fa2889ad77ef2f323f6db3dd967e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int deletePCB </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletePCB deletes the PCB requested by the user. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in the name of the PCB to be deleted. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00692">692</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="pcb_8c_source.html#l00100">findPCB()</a>, <a class="el" href="pcb_8c_source.html#l00032">freePCB()</a>, <a class="el" href="pcb_8c_source.html#l00013">prevPCBError</a>, and <a class="el" href="string_8h_source.html#l00112">printf</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                                             {</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <a class="code" href="structpcb__t.html">pcb_t</a>* foundPCB = <a class="code" href="pcb_8h.html#a3ddbd6b7d5425cfb586dabc05862e9b1">findPCB</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)parameters[0]);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    <span class="keywordflow">if</span>(!foundPCB)</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    {</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(<a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>));</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    }</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a> retval = <a class="code" href="pcb_8h.html#aa2fdf62a032353fbef2792502860709b">freePCB</a>(foundPCB);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(retval));</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    <span class="keywordflow">return</span> retval;</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;}</div><div class="ttc" id="pcb_8h_html_a8e319ed5099e8558e03c1bdd25c9559a"><div class="ttname"><a href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t prevPCBError</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00013">pcb.c:13</a></div></div>
<div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="pcb_8h_html_a3ddbd6b7d5425cfb586dabc05862e9b1"><div class="ttname"><a href="pcb_8h.html#a3ddbd6b7d5425cfb586dabc05862e9b1">findPCB</a></div><div class="ttdeci">pcb_t * findPCB(const char *processName)</div><div class="ttdoc">findPCB will search all queues for the PCB with the input name </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00100">pcb.c:100</a></div></div>
<div class="ttc" id="structpcb__t_html"><div class="ttname"><a href="structpcb__t.html">pcb_t</a></div><div class="ttdoc">typedef for pcb_t struct </div></div>
<div class="ttc" id="pcb_8h_html_aa2fdf62a032353fbef2792502860709b"><div class="ttname"><a href="pcb_8h.html#aa2fdf62a032353fbef2792502860709b">freePCB</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t freePCB(pcb_t *pcbToFree)</div><div class="ttdoc">freePCB free all associated memory with the PCB, including the stack and other pointers ...</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00032">pcb.c:32</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t</div><div class="ttdoc">The e_PCB_ERROR_CODE_t enum defines the return status of functions working with PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="affb6f9c7b2c1d585677a5bba1da35c06"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void getDate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>getDate Get the current date from the system. </p>
<p>No parameters required, prints out a date. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00361">361</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="rtc_8c_source.html#l00056">get_date()</a>, and <a class="el" href="string_8h_source.html#l00112">printf</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00350">date()</a>, and <a class="el" href="comm__list_8c_source.html#l00367">setDate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;               {</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">int</span> month=0, day=0, year=0;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="rtc_8h.html#ab43f56447c49f42bb4baee3e59e2d1f9">get_date</a>(&amp;day, &amp;month, &amp;year);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;The current date is %d/%d/20%d UTC\r\n&quot;</span>, day, month, year);</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;}</div><div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="rtc_8h_html_ab43f56447c49f42bb4baee3e59e2d1f9"><div class="ttname"><a href="rtc_8h.html#ab43f56447c49f42bb4baee3e59e2d1f9">get_date</a></div><div class="ttdeci">void get_date(int *day, int *month, int *year)</div><div class="ttdoc">get_date this function will retrieve the system date and place in three pointers </div><div class="ttdef"><b>Definition:</b> <a href="rtc_8c_source.html#l00056">rtc.c:56</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a63e5b5d633e0beec232fe5765124ad7e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int getNumDaysInMonth </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>month</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>year</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>getNumDaysInMonth is a helper function to allow the easy retrieval of days in a month based on the month input by the user. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">month</td><td>is an integer from 1-12 </td></tr>
    <tr><td class="paramname">year</td><td>is an integer representing the year to check if it's a leap year </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of days in the corresponding month </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00014">14</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00367">setDate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                                           {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keywordtype">int</span> days = 0;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keywordflow">switch</span> (month) {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">case</span> 01: <span class="keywordflow">case</span> 3: <span class="keywordflow">case</span> 5: <span class="keywordflow">case</span> 7: <span class="keywordflow">case</span> 8: <span class="keywordflow">case</span> 10: <span class="keywordflow">case</span> 12:</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        days = 31;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordflow">case</span> 4: <span class="keywordflow">case</span> 6: <span class="keywordflow">case</span> 9: <span class="keywordflow">case</span> 11:</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        days = 30;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">if</span>(year%4==0)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            days = 29;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            days = 28;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">return</span> days;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1c7c164fd3c7dea7004ece3c6251fc94"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void getTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>getTime this function has the side-effect of printing the current time to the terminal. </p>
<p>No parameters are required. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00404">404</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="rtc_8c_source.html#l00010">get_time()</a>, <a class="el" href="serial_8c_source.html#l00059">serial_print()</a>, and <a class="el" href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">sprintf()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00414">setTime()</a>, and <a class="el" href="comm__list_8c_source.html#l00393">time()</a>.</p>
<div class="fragment"><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;               {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="keywordtype">int</span> hour=0, minutes=0, seconds=0;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <a class="code" href="rtc_8h.html#a35fa24488cb7eb077e8dc995729202cf">get_time</a>(&amp;hour, &amp;minutes, &amp;seconds);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordtype">char</span> buf[500]; <a class="code" href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">\</a></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<a class="code" href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">    sprintf</a>(buf, 500, <span class="stringliteral">&quot;\033[38;2;255;0;255mThe current time is %d:%d.%d UTC\r\n\033[38;2;255;255;255m&quot;</span>, hour, minutes, seconds); <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">\</a></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">    serial_print</a>(buf);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="comment">//printf(&quot;\033[38;2;255;0;255mThe current time is %d:%d.%d UTC\r\n\033[38;2;255;255;255m&quot;, hour, minutes, seconds);</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;}</div><div class="ttc" id="serial_8h_html_a995827efcd4dcfb780c9fbb9645410a4"><div class="ttname"><a href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a></div><div class="ttdeci">int serial_print(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00059">serial.c:59</a></div></div>
<div class="ttc" id="rtc_8h_html_a35fa24488cb7eb077e8dc995729202cf"><div class="ttname"><a href="rtc_8h.html#a35fa24488cb7eb077e8dc995729202cf">get_time</a></div><div class="ttdeci">void get_time(int *hours, int *minutes, int *seconds)</div><div class="ttdoc">get_time this function will retrieve the system time and place it in three pointers. Military time </div><div class="ttdef"><b>Definition:</b> <a href="rtc_8c_source.html#l00010">rtc.c:10</a></div></div>
<div class="ttc" id="string_8h_html_ae9cac82f3293a00d8ec8705a3fc5cf64"><div class="ttname"><a href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">sprintf</a></div><div class="ttdeci">int sprintf(char *str, int bufLength, const char *format,...) __attribute__((format(printf</div><div class="ttdoc">sprintf print with format to specified string buffer </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a97ee70a8770dc30d06c744b24eb2fcfc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void help </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>help prints out a list of all possible commands and a brief description of what they do. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00067">67</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="input_8h_source.html#l00024">BG_BLACK</a>, <a class="el" href="input_8h_source.html#l00023">BG_DARK_RED</a>, <a class="el" href="input_8h_source.html#l00022">BG_WHITE</a>, <a class="el" href="input_8h_source.html#l00031">COLOR_BLACK</a>, <a class="el" href="input_8h_source.html#l00028">COLOR_BLUE</a>, <a class="el" href="input_8h_source.html#l00027">COLOR_GREEN</a>, <a class="el" href="input_8h_source.html#l00032">COLOR_MAGENTA</a>, <a class="el" href="input_8h_source.html#l00034">COLOR_ORANGE</a>, <a class="el" href="input_8h_source.html#l00026">COLOR_RED</a>, <a class="el" href="input_8h_source.html#l00038">COLOR_STOP</a>, <a class="el" href="input_8h_source.html#l00030">COLOR_WHITE</a>, <a class="el" href="input_8h_source.html#l00029">COLOR_YELLOW</a>, <a class="el" href="comm__list_8c_source.html#l00228">helpPcbPrint()</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, and <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%sUNIX style commands%s\r\n&quot;</span>,<a class="code" href="input_8h.html#aba2a7fe77a7501e5844370eec0185207">COLOR_BLACK</a>, <a class="code" href="group___r3.html#ga6beded3f171517df3902c52f79f6fea2">BG_WHITE</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%sCommand   | what it does%s\r\n&quot;</span>, <a class="code" href="input_8h.html#aba2a7fe77a7501e5844370eec0185207">COLOR_BLACK</a>, <a class="code" href="group___r3.html#ga6beded3f171517df3902c52f79f6fea2">BG_WHITE</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%s-------   | -----------------------------------%s\r\n&quot;</span>, <a class="code" href="input_8h.html#a9b44987ffdc2af19b635206b94334b69">COLOR_WHITE</a>, <a class="code" href="input_8h.html#adad2b39a3d0903aa525ac599f90334aa">BG_DARK_RED</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%sdate      | Interact with the current system date%s\r\n&quot;</span>,<a class="code" href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a>, <a class="code" href="input_8h.html#a0e5ebbe291d95cf1b8f1661252722fe0">BG_BLACK</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%shelp      | Shows the command options%s\r\n&quot;</span>, <a class="code" href="input_8h.html#aef75f616b9a3fdb10d38395dfb996873">COLOR_ORANGE</a>, <a class="code" href="group___r3.html#ga6beded3f171517df3902c52f79f6fea2">BG_WHITE</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%spcb       | Work with the processes%s\r\n&quot;</span>, <a class="code" href="input_8h.html#a4534b577b74a58b0f4b7be027af664e0">COLOR_YELLOW</a>, <a class="code" href="input_8h.html#adad2b39a3d0903aa525ac599f90334aa">BG_DARK_RED</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%sshutdown  | Shut down the system%s\r\n&quot;</span>, <a class="code" href="input_8h.html#afc9149f5de51bd9ac4f5ebbfa153f018">COLOR_GREEN</a>, <a class="code" href="input_8h.html#a0e5ebbe291d95cf1b8f1661252722fe0">BG_BLACK</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%stime      | Interact with the current system time%s\r\n&quot;</span>, <a class="code" href="input_8h.html#a23c70d699a5a775bc2e1ebeb8603f630">COLOR_BLUE</a>, <a class="code" href="group___r3.html#ga6beded3f171517df3902c52f79f6fea2">BG_WHITE</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s%sversion   | Get the current version of the OS%s\r\n&quot;</span>, <a class="code" href="input_8h.html#a8deb0beccea721b35bdb1b4f7264fe75">COLOR_MAGENTA</a>, <a class="code" href="input_8h.html#adad2b39a3d0903aa525ac599f90334aa">BG_DARK_RED</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="comm__list_8c.html#ad5bf868baaa12963086a0aa11c632159">helpPcbPrint</a>();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sScroll up for additional commands%s\r\n&quot;</span>, <a class="code" href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div><div class="ttc" id="input_8h_html_a4534b577b74a58b0f4b7be027af664e0"><div class="ttname"><a href="input_8h.html#a4534b577b74a58b0f4b7be027af664e0">COLOR_YELLOW</a></div><div class="ttdeci">#define COLOR_YELLOW</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00029">input.h:29</a></div></div>
<div class="ttc" id="input_8h_html_a9b44987ffdc2af19b635206b94334b69"><div class="ttname"><a href="input_8h.html#a9b44987ffdc2af19b635206b94334b69">COLOR_WHITE</a></div><div class="ttdeci">#define COLOR_WHITE</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00030">input.h:30</a></div></div>
<div class="ttc" id="input_8h_html_afc9149f5de51bd9ac4f5ebbfa153f018"><div class="ttname"><a href="input_8h.html#afc9149f5de51bd9ac4f5ebbfa153f018">COLOR_GREEN</a></div><div class="ttdeci">#define COLOR_GREEN</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00027">input.h:27</a></div></div>
<div class="ttc" id="input_8h_html_ad86358bf19927183dd7b4ae215a29731"><div class="ttname"><a href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a></div><div class="ttdeci">#define COLOR_RED</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00026">input.h:26</a></div></div>
<div class="ttc" id="input_8h_html_a0e5ebbe291d95cf1b8f1661252722fe0"><div class="ttname"><a href="input_8h.html#a0e5ebbe291d95cf1b8f1661252722fe0">BG_BLACK</a></div><div class="ttdeci">#define BG_BLACK</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00024">input.h:24</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="input_8h_html_aef75f616b9a3fdb10d38395dfb996873"><div class="ttname"><a href="input_8h.html#aef75f616b9a3fdb10d38395dfb996873">COLOR_ORANGE</a></div><div class="ttdeci">#define COLOR_ORANGE</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00034">input.h:34</a></div></div>
<div class="ttc" id="input_8h_html_a23c70d699a5a775bc2e1ebeb8603f630"><div class="ttname"><a href="input_8h.html#a23c70d699a5a775bc2e1ebeb8603f630">COLOR_BLUE</a></div><div class="ttdeci">#define COLOR_BLUE</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00028">input.h:28</a></div></div>
<div class="ttc" id="input_8h_html_adad2b39a3d0903aa525ac599f90334aa"><div class="ttname"><a href="input_8h.html#adad2b39a3d0903aa525ac599f90334aa">BG_DARK_RED</a></div><div class="ttdeci">#define BG_DARK_RED</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00023">input.h:23</a></div></div>
<div class="ttc" id="comm__list_8c_html_ad5bf868baaa12963086a0aa11c632159"><div class="ttname"><a href="comm__list_8c.html#ad5bf868baaa12963086a0aa11c632159">helpPcbPrint</a></div><div class="ttdeci">void helpPcbPrint()</div><div class="ttdoc">helpPcbPrint prints out the commands for PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00228">comm_list.c:228</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="input_8h_html_a83d5e2a3a33006800c5da01d47809bb5"><div class="ttname"><a href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a></div><div class="ttdeci">#define COLOR_STOP</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00038">input.h:38</a></div></div>
<div class="ttc" id="input_8h_html_aba2a7fe77a7501e5844370eec0185207"><div class="ttname"><a href="input_8h.html#aba2a7fe77a7501e5844370eec0185207">COLOR_BLACK</a></div><div class="ttdeci">#define COLOR_BLACK</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00031">input.h:31</a></div></div>
<div class="ttc" id="input_8h_html_a8deb0beccea721b35bdb1b4f7264fe75"><div class="ttname"><a href="input_8h.html#a8deb0beccea721b35bdb1b4f7264fe75">COLOR_MAGENTA</a></div><div class="ttdeci">#define COLOR_MAGENTA</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00032">input.h:32</a></div></div>
<div class="ttc" id="group___r3_html_ga6beded3f171517df3902c52f79f6fea2"><div class="ttname"><a href="group___r3.html#ga6beded3f171517df3902c52f79f6fea2">BG_WHITE</a></div><div class="ttdeci">#define BG_WHITE</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00022">input.h:22</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a35106b0a99fb607930e3caa5f2a88974"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpBlockPCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpBlockPCB prints out the parameters and usage for blocking a PCB. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00321">321</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                    {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Removes the PCB from current queue and places it into the blocked queue.&quot;</span>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --block&quot;</span>);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;name of the PCB&#39;&quot;</span>);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a72381b23fce4dc8d86d6ef7fbc440eda"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpCreatePCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpCreatePCB prints out the parameters and usage for createPCB. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00305">305</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                     {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Creates a new PCB and allocates memory.&quot;</span>);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --create&quot;</span>);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;the name of the PCB&#39;\n-p/--priority &#39;priority from 0-9 of pcb&#39;\n-c/--class &#39;System or User_app&#39;&quot;</span>);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae7390c4786bfe500bab96f1e0439902a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpDate </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpDate prints out the help information for date, for date &ndash;set and date &ndash;get </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in a char array</td></tr>
  </table>
  </dd>
</dl>
<p>[0] can be &ndash;set or &ndash;get or empty &ndash;set tells the parameters and usage for setting the date &ndash;get tells the parameters and usage for getting the date </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00152">152</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="string_8c_source.html#l00077">strcmp()</a>, and <a class="el" href="string_8c_source.html#l00010">strlen()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a>(parameters[0]))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Retireves or Sets the system date&quot;</span>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;date&#39;&quot;</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\033[38;2;255;255;0mArguments available: \033[38;2;255;0;0m--set, --get\033[0m&quot;</span>);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Enter the command &#39;help date --get&#39; or &#39;help date --set&#39;&quot;</span>);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--set&quot;</span>))</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Sets the system date&quot;</span>);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;date --set&#39;&quot;</span>);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Usage: \033[38;2;255;255;0m &#39;date --set&#39; \&quot;DD/MM/YYYY\&quot; \033[0m&quot;</span>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--get&quot;</span>))</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Gets the system date&quot;</span>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;date --get&#39;&quot;</span>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Usage: \033[38;2;255;255;0m &#39;date --get&#39; \033[0m&quot;</span>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="string_8h_html_a2dee044e4e667b5b789b493abd21cfa4"><div class="ttname"><a href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a></div><div class="ttdeci">int strlen(const char *s)</div><div class="ttdoc">strlen returns the length of a string </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00010">string.c:10</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a603af725d8289ae121f4ba45d55e654f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpDeletePCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpDeletePCB prints out the parameters and usage for deleting a PCB. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00313">313</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                     {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Delete the specified PCB and frees memory.  Removes the PCB from any queues it is currently in.&quot;</span>);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --delete&quot;</span>);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;the name of the PCB&#39;&quot;</span>);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af4729cc64f3f6ec814af70e26c9ab9ca"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int helpFunc </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpFunc calls the other help functions </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>used to determine if just help or help set date was called </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00048">48</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="comm__list_8c_source.html#l00067">help()</a>, <a class="el" href="comm__list_8c_source.html#l00152">helpDate()</a>, <a class="el" href="comm__list_8c_source.html#l00085">helpGetVersion()</a>, <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>, <a class="el" href="comm__list_8c_source.html#l00126">helpShutdown()</a>, <a class="el" href="comm__list_8c_source.html#l00175">helpTime()</a>, <a class="el" href="comm__vars_8h_source.html#l00002">IMPROPER_COMMAND</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, and <a class="el" href="string_8c_source.html#l00077">strcmp()</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00172">initCmdArray()</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                            {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;\0&quot;</span>)) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <a class="code" href="comm__list_8c.html#a97ee70a8770dc30d06c744b24eb2fcfc">help</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;shutdown&quot;</span>)==0) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="comm__list_8c.html#af128492f8bc92a7110f7e2de0bf26fa0">helpShutdown</a>();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;version&quot;</span>)==0) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="comm__list_8c.html#aa0721512217377ef46085ce000a6daf4">helpGetVersion</a>();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;time&quot;</span>)==0) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="comm__list_8c.html#a4ade66f75a1cf0af90a2e983c6d4e656">helpTime</a>(&amp;parameters[1]);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;date&quot;</span>)==0) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="comm__list_8c.html#ae7390c4786bfe500bab96f1e0439902a">helpDate</a>(&amp;parameters[1]);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;pcb&quot;</span>)==0) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <a class="code" href="comm__list_8c.html#a1f65434c6dfc1eb5b97d4dba4f923dc4">helpPcb</a>(&amp;parameters[1]);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<a class="code" href="comm__vars_8h.html#adc0c870b429ed41ab22e23dbba9e6af1">IMPROPER_COMMAND</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="ttc" id="comm__list_8c_html_a4ade66f75a1cf0af90a2e983c6d4e656"><div class="ttname"><a href="comm__list_8c.html#a4ade66f75a1cf0af90a2e983c6d4e656">helpTime</a></div><div class="ttdeci">void helpTime(char parameters[][MAX_LENGTH])</div><div class="ttdoc">helpTime prints out the help information for time, for time –set and time –get </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00175">comm_list.c:175</a></div></div>
<div class="ttc" id="comm__list_8c_html_a97ee70a8770dc30d06c744b24eb2fcfc"><div class="ttname"><a href="comm__list_8c.html#a97ee70a8770dc30d06c744b24eb2fcfc">help</a></div><div class="ttdeci">void help()</div><div class="ttdoc">help prints out a list of all possible commands and a brief description of what they do...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00067">comm_list.c:67</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="comm__list_8c_html_a1f65434c6dfc1eb5b97d4dba4f923dc4"><div class="ttname"><a href="comm__list_8c.html#a1f65434c6dfc1eb5b97d4dba4f923dc4">helpPcb</a></div><div class="ttdeci">void helpPcb(char parameters[][MAX_LENGTH])</div><div class="ttdoc">helpPcb takes in the command to print the help information for. Calls the proper function to print th...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00198">comm_list.c:198</a></div></div>
<div class="ttc" id="comm__list_8c_html_af128492f8bc92a7110f7e2de0bf26fa0"><div class="ttname"><a href="comm__list_8c.html#af128492f8bc92a7110f7e2de0bf26fa0">helpShutdown</a></div><div class="ttdeci">void helpShutdown()</div><div class="ttdoc">helpShutdown prints the help instructions for set date. Tells the user what the command and arguments...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00126">comm_list.c:126</a></div></div>
<div class="ttc" id="comm__vars_8h_html_adc0c870b429ed41ab22e23dbba9e6af1"><div class="ttname"><a href="comm__vars_8h.html#adc0c870b429ed41ab22e23dbba9e6af1">IMPROPER_COMMAND</a></div><div class="ttdeci">#define IMPROPER_COMMAND</div><div class="ttdef"><b>Definition:</b> <a href="comm__vars_8h_source.html#l00002">comm_vars.h:2</a></div></div>
<div class="ttc" id="comm__list_8c_html_ae7390c4786bfe500bab96f1e0439902a"><div class="ttname"><a href="comm__list_8c.html#ae7390c4786bfe500bab96f1e0439902a">helpDate</a></div><div class="ttdeci">void helpDate(char parameters[][MAX_LENGTH])</div><div class="ttdoc">helpDate prints out the help information for date, for date –set and date –get </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00152">comm_list.c:152</a></div></div>
<div class="ttc" id="comm__list_8c_html_aa0721512217377ef46085ce000a6daf4"><div class="ttname"><a href="comm__list_8c.html#aa0721512217377ef46085ce000a6daf4">helpGetVersion</a></div><div class="ttdeci">int helpGetVersion()</div><div class="ttdoc">helpGetVersion prints the help instructions for version. Tells the user what the command and argument...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00085">comm_list.c:85</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0f223b2f9d2c4887ab9d4943a565a20f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpGetDate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpGetDate prints the help instructions for get date. Tells the user what the command and arguments for 'get date' are. </p>
<p>No parameters are needed to be passed in, as it just prints to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00094">94</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                   {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Get the current date.&quot;</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;get date&#39;&quot;</span>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;There are no arguments required.&quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab023cd64db7b635c8e4048430fdd51c9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpGetTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpGetTime prints the help instructions for get time. Tells the user what the commands and arguments for 'get time' are. </p>
<p>No parameters are needed to be passed in, as it just prints to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00110">110</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                   {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Get the current time in UTC.&quot;</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;get time&#39;&quot;</span>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;There are no arguments required.&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa0721512217377ef46085ce000a6daf4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int helpGetVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpGetVersion prints the help instructions for version. Tells the user what the command and arguments for 'version' are. </p>
<p>No parameters are needed to be passed in, as it just prints to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00085">85</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="input_8h_source.html#l00026">COLOR_RED</a>, <a class="el" href="input_8h_source.html#l00038">COLOR_STOP</a>, <a class="el" href="input_8h_source.html#l00029">COLOR_YELLOW</a>, and <a class="el" href="string_8h_source.html#l00112">printf</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                     {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sGet the current version of the operating system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Command: &#39;%sversion%s&#39;\r\n&quot;</span>,<a class="code" href="input_8h.html#a4534b577b74a58b0f4b7be027af664e0">COLOR_YELLOW</a>,<a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sThere are no arguments required.\r\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sThis will return R1, R2,... showing the current module.\r\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s\r\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div><div class="ttc" id="input_8h_html_a4534b577b74a58b0f4b7be027af664e0"><div class="ttname"><a href="input_8h.html#a4534b577b74a58b0f4b7be027af664e0">COLOR_YELLOW</a></div><div class="ttdeci">#define COLOR_YELLOW</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00029">input.h:29</a></div></div>
<div class="ttc" id="input_8h_html_ad86358bf19927183dd7b4ae215a29731"><div class="ttname"><a href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a></div><div class="ttdeci">#define COLOR_RED</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00026">input.h:26</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="input_8h_html_a83d5e2a3a33006800c5da01d47809bb5"><div class="ttname"><a href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a></div><div class="ttdeci">#define COLOR_STOP</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00038">input.h:38</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1f65434c6dfc1eb5b97d4dba4f923dc4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpPcb </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpPcb takes in the command to print the help information for. Calls the proper function to print the help information for the selected command. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in a character array </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00198">198</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="comm__list_8c_source.html#l00321">helpBlockPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00305">helpCreatePCB()</a>, <a class="el" href="comm__list_8c_source.html#l00313">helpDeletePCB()</a>, <a class="el" href="comm__list_8c_source.html#l00228">helpPcbPrint()</a>, <a class="el" href="comm__list_8c_source.html#l00257">helpResumePCB()</a>, <a class="el" href="comm__list_8c_source.html#l00265">helpSetPriority()</a>, <a class="el" href="comm__list_8c_source.html#l00281">helpShowAllProcesses()</a>, <a class="el" href="comm__list_8c_source.html#l00297">helpShowBlockedProcesses()</a>, <a class="el" href="comm__list_8c_source.html#l00273">helpShowPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00289">helpShowReadyProcesses()</a>, <a class="el" href="comm__list_8c_source.html#l00249">helpSuspendPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00329">helpUnblockPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00034">isEmpty()</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, and <a class="el" href="string_8c_source.html#l00077">strcmp()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                            {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[0])) {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="comm__list_8c.html#ad5bf868baaa12963086a0aa11c632159">helpPcbPrint</a>();</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--block&quot;</span>)) {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="comm__list_8c.html#a35106b0a99fb607930e3caa5f2a88974">helpBlockPCB</a>();</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--create&quot;</span>)) {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <a class="code" href="comm__list_8c.html#a72381b23fce4dc8d86d6ef7fbc440eda">helpCreatePCB</a>();</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--delete&quot;</span>)) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <a class="code" href="comm__list_8c.html#a603af725d8289ae121f4ba45d55e654f">helpDeletePCB</a>();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--resume&quot;</span>)) {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="comm__list_8c.html#aba83fcaebd5841ba00582be3913d012d">helpResumePCB</a>();</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--setpriority&quot;</span>)) {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="comm__list_8c.html#ace39d9c4df8b991ae1db257969f511f3">helpSetPriority</a>();</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--show&quot;</span>)) {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <a class="code" href="comm__list_8c.html#a8f9ff33592233864136430a150026353">helpShowPCB</a>();</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--showall&quot;</span>)) {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="comm__list_8c.html#a20c49565baaff2aec112f4d99d63058f">helpShowAllProcesses</a>();</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--showblocked&quot;</span>)) {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="comm__list_8c.html#a42841eb74573504baa22dd0c76ca83e9">helpShowBlockedProcesses</a>();</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--showready&quot;</span>)) {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="comm__list_8c.html#afc0abad04f83d121f3c7d8f4e08eade7">helpShowReadyProcesses</a>();</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--suspend&quot;</span>)) {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <a class="code" href="comm__list_8c.html#a5c4cb1d2574709bc85d25706f5534cf4">helpSuspendPCB</a>();</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--unblock&quot;</span>)) {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <a class="code" href="comm__list_8c.html#a2f4de74d76cc04ea63e4f253fcdf5aec">helpUnblockPCB</a>();</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Invalid parameter, run &#39;help pcb&#39; to see the valid parameters.&quot;</span>);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div><div class="ttc" id="comm__list_8c_html_aba83fcaebd5841ba00582be3913d012d"><div class="ttname"><a href="comm__list_8c.html#aba83fcaebd5841ba00582be3913d012d">helpResumePCB</a></div><div class="ttdeci">void helpResumePCB()</div><div class="ttdoc">helpResumePCB prints out the parameters and usage of the resume pcb command. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00257">comm_list.c:257</a></div></div>
<div class="ttc" id="comm__list_8c_html_a5c4cb1d2574709bc85d25706f5534cf4"><div class="ttname"><a href="comm__list_8c.html#a5c4cb1d2574709bc85d25706f5534cf4">helpSuspendPCB</a></div><div class="ttdeci">void helpSuspendPCB()</div><div class="ttdoc">helpSuspendPCB prints the help instructions for the suspendPCB command. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00249">comm_list.c:249</a></div></div>
<div class="ttc" id="comm__list_8c_html_a2f4de74d76cc04ea63e4f253fcdf5aec"><div class="ttname"><a href="comm__list_8c.html#a2f4de74d76cc04ea63e4f253fcdf5aec">helpUnblockPCB</a></div><div class="ttdeci">void helpUnblockPCB()</div><div class="ttdoc">helpUnblockPCB prints out the parameters and usage for unblocking a PCB. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00329">comm_list.c:329</a></div></div>
<div class="ttc" id="comm__list_8c_html_a35106b0a99fb607930e3caa5f2a88974"><div class="ttname"><a href="comm__list_8c.html#a35106b0a99fb607930e3caa5f2a88974">helpBlockPCB</a></div><div class="ttdeci">void helpBlockPCB()</div><div class="ttdoc">helpBlockPCB prints out the parameters and usage for blocking a PCB. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00321">comm_list.c:321</a></div></div>
<div class="ttc" id="comm__list_8c_html_ace39d9c4df8b991ae1db257969f511f3"><div class="ttname"><a href="comm__list_8c.html#ace39d9c4df8b991ae1db257969f511f3">helpSetPriority</a></div><div class="ttdeci">void helpSetPriority()</div><div class="ttdoc">helpSetPriority prints out to console the parameters and usage for –setpriority. ...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00265">comm_list.c:265</a></div></div>
<div class="ttc" id="comm__list_8c_html_afc0abad04f83d121f3c7d8f4e08eade7"><div class="ttname"><a href="comm__list_8c.html#afc0abad04f83d121f3c7d8f4e08eade7">helpShowReadyProcesses</a></div><div class="ttdeci">void helpShowReadyProcesses()</div><div class="ttdoc">helpShowReadyProcesses shows the parameters and usage for showing ready PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00289">comm_list.c:289</a></div></div>
<div class="ttc" id="comm__list_8c_html_a123c1c0d25a5a737a49a812d4bfd5d8d"><div class="ttname"><a href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a></div><div class="ttdeci">int isEmpty(char parameters[][MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00034">comm_list.c:34</a></div></div>
<div class="ttc" id="comm__list_8c_html_a72381b23fce4dc8d86d6ef7fbc440eda"><div class="ttname"><a href="comm__list_8c.html#a72381b23fce4dc8d86d6ef7fbc440eda">helpCreatePCB</a></div><div class="ttdeci">void helpCreatePCB()</div><div class="ttdoc">helpCreatePCB prints out the parameters and usage for createPCB. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00305">comm_list.c:305</a></div></div>
<div class="ttc" id="comm__list_8c_html_ad5bf868baaa12963086a0aa11c632159"><div class="ttname"><a href="comm__list_8c.html#ad5bf868baaa12963086a0aa11c632159">helpPcbPrint</a></div><div class="ttdeci">void helpPcbPrint()</div><div class="ttdoc">helpPcbPrint prints out the commands for PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00228">comm_list.c:228</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="comm__list_8c_html_a20c49565baaff2aec112f4d99d63058f"><div class="ttname"><a href="comm__list_8c.html#a20c49565baaff2aec112f4d99d63058f">helpShowAllProcesses</a></div><div class="ttdeci">void helpShowAllProcesses()</div><div class="ttdoc">helpShowAllProcesses shows all processes in the system. Takes in no parameters and prints out to the ...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00281">comm_list.c:281</a></div></div>
<div class="ttc" id="comm__list_8c_html_a603af725d8289ae121f4ba45d55e654f"><div class="ttname"><a href="comm__list_8c.html#a603af725d8289ae121f4ba45d55e654f">helpDeletePCB</a></div><div class="ttdeci">void helpDeletePCB()</div><div class="ttdoc">helpDeletePCB prints out the parameters and usage for deleting a PCB. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00313">comm_list.c:313</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
<div class="ttc" id="comm__list_8c_html_a8f9ff33592233864136430a150026353"><div class="ttname"><a href="comm__list_8c.html#a8f9ff33592233864136430a150026353">helpShowPCB</a></div><div class="ttdeci">void helpShowPCB()</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00273">comm_list.c:273</a></div></div>
<div class="ttc" id="comm__list_8c_html_a42841eb74573504baa22dd0c76ca83e9"><div class="ttname"><a href="comm__list_8c.html#a42841eb74573504baa22dd0c76ca83e9">helpShowBlockedProcesses</a></div><div class="ttdeci">void helpShowBlockedProcesses()</div><div class="ttdoc">helpShowBlockedProcesses shows the parameters and usage for showing the blocked PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00297">comm_list.c:297</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad5bf868baaa12963086a0aa11c632159"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpPcbPrint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpPcbPrint prints out the commands for PCBs. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00228">228</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00067">help()</a>, and <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;PCB commands\r\n&quot;</span>);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Use &#39;pcb [command]&#39;&quot;</span>);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;   Command    | what it does&quot;</span>);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;____________  | _________________________________&quot;</span>);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--block       | Sends the PCB to the blocked queue&quot;</span>);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--create      | Creates a new PCB and allocates memory&quot;</span>);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--delete      | Delete specified PCB and frees memory&quot;</span>);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--resume      | Resume the specified PCB&quot;</span>);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--setpriority | Set/change the priority of the specified PCB&quot;</span>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--show        | Show the specified PCB&quot;</span>);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--showall     | Show all of the PCBs&quot;</span>);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--showblocked | Show the PCBs in the blocked queue&quot;</span>);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--showready   | Show the PCBs in the ready queue&quot;</span>);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--suspend     | Suspends the specified PCB&quot;</span>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--unblock     | Moves the specified PCB from the blocked state to ready queue&quot;</span>);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Type &#39;help [command]&#39; to see what the command does and arguments it requires.&quot;</span>);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aba83fcaebd5841ba00582be3913d012d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpResumePCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpResumePCB prints out the parameters and usage of the resume pcb command. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00257">257</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                     {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Resume the specified PCB.  Removes PCB from suspended queue and places it into the appropriate queue.&quot;</span>);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --resume&quot;</span>);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;name of the PCB&#39;&quot;</span>);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a315b74fd1af8e5c10ae8fea09a7f1343"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpSetDate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpSetDate prints the help instructions for set date. Tells the user what the command and arguments for 'set date' are. </p>
<p>No parameters are needed to be passed in, as it just prints to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00101">101</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                   {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Set the current date&quot;</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;set date --set \&quot;DD/MM/YYYY\&quot; &quot;</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--set \&quot;MM/DD/YYYY\&quot;&quot;</span>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;ex. &#39;set date --set \&quot;03/12/2017\&quot;&#39;&quot;</span>);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ace39d9c4df8b991ae1db257969f511f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpSetPriority </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpSetPriority prints out to console the parameters and usage for &ndash;setpriority. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00265">265</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                       {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Set/change the priority of a particular PCB.&quot;</span>);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --setpriority&quot;</span>);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;name of PCB&#39;\n-p/--priority &#39;priority from 0-9&#39;&quot;</span>);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a38bedc7695ebaf1fddec31cac15327b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpSetTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpSetTime prints the help instructions for set time. Tells the user what the command and arguments for 'set time' are. </p>
<p>No parameters are needed to be passed in, as it just prints to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00117">117</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                  {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Set the current time in UTC&quot;</span>);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;set time --set \&quot;HH:MM.SS\&quot;&#39;&quot;</span>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments: &quot;</span>);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;--set \&quot;HH:MM.SS\&quot;   using 24 hour&quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;ex. &#39;set time --set[14:20.00]&#39; to set the system time to 2:20.00 PM&quot;</span>);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a20c49565baaff2aec112f4d99d63058f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpShowAllProcesses </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpShowAllProcesses shows all processes in the system. Takes in no parameters and prints out to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00281">281</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                            {</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Show all of the processes in the system.&quot;</span>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --showall&quot;</span>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;No arguments required.&quot;</span>);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a42841eb74573504baa22dd0c76ca83e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpShowBlockedProcesses </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpShowBlockedProcesses shows the parameters and usage for showing the blocked PCBs. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00297">297</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                {</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Show all of the processes that are in the blocked queue.&quot;</span>);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --showblocked&quot;</span>);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;No arguments required.&quot;</span>);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8f9ff33592233864136430a150026353"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpShowPCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00273">273</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                   {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Show the information for a particular PCB.&quot;</span>);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --show&quot;</span>);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;name of the PCB&#39;&quot;</span>);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afc0abad04f83d121f3c7d8f4e08eade7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpShowReadyProcesses </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpShowReadyProcesses shows the parameters and usage for showing ready PCBs. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00289">289</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                              {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Show all of the processes that are in the ready queue.&quot;</span>);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --showready&quot;</span>);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;No arguments required.&quot;</span>);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af128492f8bc92a7110f7e2de0bf26fa0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpShutdown </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpShutdown prints the help instructions for set date. Tells the user what the command and arguments for 'set date' are. </p>
<p>No parameters are needed to be passed in, as it just prints to the console. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00126">126</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="input_8h_source.html#l00031">COLOR_BLACK</a>, <a class="el" href="input_8h_source.html#l00028">COLOR_BLUE</a>, <a class="el" href="input_8h_source.html#l00033">COLOR_CYAN</a>, <a class="el" href="input_8h_source.html#l00027">COLOR_GREEN</a>, <a class="el" href="input_8h_source.html#l00032">COLOR_MAGENTA</a>, <a class="el" href="input_8h_source.html#l00034">COLOR_ORANGE</a>, <a class="el" href="input_8h_source.html#l00035">COLOR_PINK</a>, <a class="el" href="input_8h_source.html#l00026">COLOR_RED</a>, <a class="el" href="input_8h_source.html#l00036">COLOR_RED_DARK</a>, <a class="el" href="input_8h_source.html#l00038">COLOR_STOP</a>, <a class="el" href="input_8h_source.html#l00029">COLOR_YELLOW</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, and <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#a23c70d699a5a775bc2e1ebeb8603f630">COLOR_BLUE</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#afc9149f5de51bd9ac4f5ebbfa153f018">COLOR_GREEN</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#aba2a7fe77a7501e5844370eec0185207">COLOR_BLACK</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#a82573859711fce56f1aa0a76b18a9b18">COLOR_CYAN</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#a8deb0beccea721b35bdb1b4f7264fe75">COLOR_MAGENTA</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#a4534b577b74a58b0f4b7be027af664e0">COLOR_YELLOW</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#aef75f616b9a3fdb10d38395dfb996873">COLOR_ORANGE</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#adc400e6efc54843fb9400270bbc61368">COLOR_PINK</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sShut down the system%s\r\n&quot;</span>,<a class="code" href="input_8h.html#a31a86e060879aa8f22a0b09fcaa91e93">COLOR_RED_DARK</a>, <a class="code" href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Shut down the system.&quot;</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;shutdown&#39;&quot;</span>);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;No arguments required.&quot;</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;You will be prompted to confirm that you want to shutdown.&quot;</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div><div class="ttc" id="input_8h_html_a4534b577b74a58b0f4b7be027af664e0"><div class="ttname"><a href="input_8h.html#a4534b577b74a58b0f4b7be027af664e0">COLOR_YELLOW</a></div><div class="ttdeci">#define COLOR_YELLOW</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00029">input.h:29</a></div></div>
<div class="ttc" id="input_8h_html_afc9149f5de51bd9ac4f5ebbfa153f018"><div class="ttname"><a href="input_8h.html#afc9149f5de51bd9ac4f5ebbfa153f018">COLOR_GREEN</a></div><div class="ttdeci">#define COLOR_GREEN</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00027">input.h:27</a></div></div>
<div class="ttc" id="input_8h_html_ad86358bf19927183dd7b4ae215a29731"><div class="ttname"><a href="input_8h.html#ad86358bf19927183dd7b4ae215a29731">COLOR_RED</a></div><div class="ttdeci">#define COLOR_RED</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00026">input.h:26</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="input_8h_html_adc400e6efc54843fb9400270bbc61368"><div class="ttname"><a href="input_8h.html#adc400e6efc54843fb9400270bbc61368">COLOR_PINK</a></div><div class="ttdeci">#define COLOR_PINK</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00035">input.h:35</a></div></div>
<div class="ttc" id="input_8h_html_aef75f616b9a3fdb10d38395dfb996873"><div class="ttname"><a href="input_8h.html#aef75f616b9a3fdb10d38395dfb996873">COLOR_ORANGE</a></div><div class="ttdeci">#define COLOR_ORANGE</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00034">input.h:34</a></div></div>
<div class="ttc" id="input_8h_html_a23c70d699a5a775bc2e1ebeb8603f630"><div class="ttname"><a href="input_8h.html#a23c70d699a5a775bc2e1ebeb8603f630">COLOR_BLUE</a></div><div class="ttdeci">#define COLOR_BLUE</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00028">input.h:28</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="input_8h_html_a82573859711fce56f1aa0a76b18a9b18"><div class="ttname"><a href="input_8h.html#a82573859711fce56f1aa0a76b18a9b18">COLOR_CYAN</a></div><div class="ttdeci">#define COLOR_CYAN</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00033">input.h:33</a></div></div>
<div class="ttc" id="input_8h_html_a83d5e2a3a33006800c5da01d47809bb5"><div class="ttname"><a href="input_8h.html#a83d5e2a3a33006800c5da01d47809bb5">COLOR_STOP</a></div><div class="ttdeci">#define COLOR_STOP</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00038">input.h:38</a></div></div>
<div class="ttc" id="input_8h_html_aba2a7fe77a7501e5844370eec0185207"><div class="ttname"><a href="input_8h.html#aba2a7fe77a7501e5844370eec0185207">COLOR_BLACK</a></div><div class="ttdeci">#define COLOR_BLACK</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00031">input.h:31</a></div></div>
<div class="ttc" id="input_8h_html_a8deb0beccea721b35bdb1b4f7264fe75"><div class="ttname"><a href="input_8h.html#a8deb0beccea721b35bdb1b4f7264fe75">COLOR_MAGENTA</a></div><div class="ttdeci">#define COLOR_MAGENTA</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00032">input.h:32</a></div></div>
<div class="ttc" id="input_8h_html_a31a86e060879aa8f22a0b09fcaa91e93"><div class="ttname"><a href="input_8h.html#a31a86e060879aa8f22a0b09fcaa91e93">COLOR_RED_DARK</a></div><div class="ttdeci">#define COLOR_RED_DARK</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00036">input.h:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5c4cb1d2574709bc85d25706f5534cf4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpSuspendPCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpSuspendPCB prints the help instructions for the suspendPCB command. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00249">249</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                      {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Suspend a particular PCB.&quot;</span>);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --suspend&quot;</span>);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;name of the pcb&quot;</span>);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4ade66f75a1cf0af90a2e983c6d4e656"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpTime </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpTime prints out the help information for time, for time &ndash;set and time &ndash;get </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in a char array</td></tr>
  </table>
  </dd>
</dl>
<p>[0] can be &ndash;set or &ndash;get or empty &ndash;set tells the parameters and usage for setting the time &ndash;get tells the parameters and usage for getting the time </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00175">175</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="string_8c_source.html#l00077">strcmp()</a>, and <a class="el" href="string_8c_source.html#l00010">strlen()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a>(parameters[0]))</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Retrieves or Sets the system time&quot;</span>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;time&#39;&quot;</span>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\033[38;2;255;255;0mArguments available: \033[38;2;255;0;0m--set, --get\033[0m&quot;</span>);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Enter the command &#39;help time --get&#39; or &#39;help time --set&#39;&quot;</span>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--set&quot;</span>))</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Sets the system time&quot;</span>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;time --set&#39;&quot;</span>);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Usage: \033[38;2;255;255;0m &#39;time --set&#39; \&quot;HH:MM.SS\&quot; \033[0m&quot;</span>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0], <span class="stringliteral">&quot;--get&quot;</span>))</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Gets the system date&quot;</span>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;time --get&#39;&quot;</span>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Usage: \033[38;2;255;255;0m &#39;time --get&#39; \033[0m&quot;</span>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="string_8h_html_a2dee044e4e667b5b789b493abd21cfa4"><div class="ttname"><a href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a></div><div class="ttdeci">int strlen(const char *s)</div><div class="ttdoc">strlen returns the length of a string </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00010">string.c:10</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2f4de74d76cc04ea63e4f253fcdf5aec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpUnblockPCB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpUnblockPCB prints out the parameters and usage for unblocking a PCB. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00329">329</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>.</p>
<div class="fragment"><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                      {</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Removes the PCB from the blocked queue and places it into the ready queue.&quot;</span>);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: pcb --unblock&quot;</span>);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Arguments:&quot;</span>);</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;-n/--name &#39;name of the PCB&#39;&quot;</span>);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6b64cff6b85c2b7edb02636de6e9d2ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void helpVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>helpVersion prints the help instructions for using the version command. No arguments are required. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00145">145</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>.</p>
<div class="fragment"><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                   {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Shows the version of the operating system.&quot;</span>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Command: &#39;version&#39;&quot;</span>);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;No arguments required.&quot;</span>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div><div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a95b7dfd9ea5945e05a5e443355de389e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void initCmdArray </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="comm__list_8h.html#a99317249ae7aceea39e3c447270bc2b6">cmd_struct_t</a> *&#160;</td>
          <td class="paramname"><em>arr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="commhand_8c_source.html#l00172">172</a> of file <a class="el" href="commhand_8c_source.html">commhand.c</a>.</p>

<p>References <a class="el" href="comm__list_8h_source.html#l00013">s_cmd_struct::cmdFunc</a>, <a class="el" href="comm__list_8h_source.html#l00012">s_cmd_struct::cmdName</a>, <a class="el" href="comm__list_8c_source.html#l00350">date()</a>, <a class="el" href="comm__list_8c_source.html#l00048">helpFunc()</a>, <a class="el" href="comm__list_8c_source.html#l00736">loadr3()</a>, <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>, <a class="el" href="comm__list_8c_source.html#l00435">shutdownFunc()</a>, <a class="el" href="comm__list_8c_source.html#l00393">time()</a>, <a class="el" href="comm__list_8c_source.html#l00339">version()</a>, and <a class="el" href="comm__list_8c_source.html#l00730">yield()</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00203">init_commhand()</a>.</p>
<div class="fragment"><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                     {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    arr[0].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;help&quot;</span>;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    arr[0].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="comm__list_8c.html#af4729cc64f3f6ec814af70e26c9ab9ca">helpFunc</a>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    arr[1].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;version&quot;</span>;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    arr[1].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="comm__list_8c.html#ab21bb30658e69c3d4906e435384fa5fd">version</a>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    arr[2].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;date&quot;</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    arr[2].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="comm__list_8c.html#a2b5b0b260a749c7a0371b96f079b9d69">date</a>;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    arr[3].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;time&quot;</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    arr[3].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="comm__list_8c.html#a5dac732108bdce081376535bd2d51221">time</a>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    arr[4].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;shutdown&quot;</span>;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    arr[4].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="comm__list_8c.html#a514416c2792fdc8614585266d618fbf8">shutdownFunc</a>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    arr[5].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;pcb&quot;</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    arr[5].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="comm__list_8c.html#ac903af80a2e0afe97b30f5ca88a1505a">pcbFunc</a>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    arr[6].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;yield&quot;</span>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    arr[6].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="group___r3.html#gafc524ab0eefdb42c7b8432b587a781e1">yield</a>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    arr[7].<a class="code" href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">cmdName</a> = <span class="stringliteral">&quot;loadr3&quot;</span>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    arr[7].<a class="code" href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">cmdFunc</a> = &amp;<a class="code" href="group___r3.html#ga70f2cab9ebef7e5f74ea607c4f25dd5c">loadr3</a>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="ttc" id="group___r3_html_gafc524ab0eefdb42c7b8432b587a781e1"><div class="ttname"><a href="group___r3.html#gafc524ab0eefdb42c7b8432b587a781e1">yield</a></div><div class="ttdeci">int yield(char parameters[][MAX_LENGTH])</div><div class="ttdoc">stops the exection of commhand and executes each process in the ready queue </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00730">comm_list.c:730</a></div></div>
<div class="ttc" id="comm__list_8c_html_a5dac732108bdce081376535bd2d51221"><div class="ttname"><a href="comm__list_8c.html#a5dac732108bdce081376535bd2d51221">time</a></div><div class="ttdeci">int time(char parameters[][MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00393">comm_list.c:393</a></div></div>
<div class="ttc" id="comm__list_8c_html_a2b5b0b260a749c7a0371b96f079b9d69"><div class="ttname"><a href="comm__list_8c.html#a2b5b0b260a749c7a0371b96f079b9d69">date</a></div><div class="ttdeci">int date(char parameters[][MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00350">comm_list.c:350</a></div></div>
<div class="ttc" id="structs__cmd__struct_html_a05785ef37725660426f6881972e22de0"><div class="ttname"><a href="structs__cmd__struct.html#a05785ef37725660426f6881972e22de0">s_cmd_struct::cmdName</a></div><div class="ttdeci">const char * cmdName</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8h_source.html#l00012">comm_list.h:12</a></div></div>
<div class="ttc" id="comm__list_8c_html_ab21bb30658e69c3d4906e435384fa5fd"><div class="ttname"><a href="comm__list_8c.html#ab21bb30658e69c3d4906e435384fa5fd">version</a></div><div class="ttdeci">int version(char parameters[][MAX_LENGTH])</div><div class="ttdoc">version prints out the current version of the operating system. It will print out R1...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00339">comm_list.c:339</a></div></div>
<div class="ttc" id="comm__list_8c_html_a514416c2792fdc8614585266d618fbf8"><div class="ttname"><a href="comm__list_8c.html#a514416c2792fdc8614585266d618fbf8">shutdownFunc</a></div><div class="ttdeci">int shutdownFunc(char parameters[][MAX_LENGTH])</div><div class="ttdoc">shutdownFunc shuts down the OS. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00435">comm_list.c:435</a></div></div>
<div class="ttc" id="group___r3_html_ga70f2cab9ebef7e5f74ea607c4f25dd5c"><div class="ttname"><a href="group___r3.html#ga70f2cab9ebef7e5f74ea607c4f25dd5c">loadr3</a></div><div class="ttdeci">int loadr3(char parameters[][MAX_LENGTH])</div><div class="ttdoc">loads all processes into memory in a suspended ready state at any priority of the users choosing ...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00736">comm_list.c:736</a></div></div>
<div class="ttc" id="comm__list_8c_html_ac903af80a2e0afe97b30f5ca88a1505a"><div class="ttname"><a href="comm__list_8c.html#ac903af80a2e0afe97b30f5ca88a1505a">pcbFunc</a></div><div class="ttdeci">int pcbFunc(char parameters[][MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00468">comm_list.c:468</a></div></div>
<div class="ttc" id="structs__cmd__struct_html_a12f0e24fc635611fb6dea941a5415014"><div class="ttname"><a href="structs__cmd__struct.html#a12f0e24fc635611fb6dea941a5415014">s_cmd_struct::cmdFunc</a></div><div class="ttdeci">int(* cmdFunc)(char[][MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8h_source.html#l00013">comm_list.h:13</a></div></div>
<div class="ttc" id="comm__list_8c_html_af4729cc64f3f6ec814af70e26c9ab9ca"><div class="ttname"><a href="comm__list_8c.html#af4729cc64f3f6ec814af70e26c9ab9ca">helpFunc</a></div><div class="ttdeci">int helpFunc(char parameters[][MAX_LENGTH])</div><div class="ttdoc">helpFunc calls the other help functions </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00048">comm_list.c:48</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a123c1c0d25a5a737a49a812d4bfd5d8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int isEmpty </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00034">34</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="string_8c_source.html#l00077">strcmp()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00198">helpPcb()</a>, and <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                           {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">int</span> empty = 0;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">if</span>((!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;&quot;</span>)) || (!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;\0&quot;</span>))) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        empty = 1;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> empty;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac903af80a2e0afe97b30f5ca88a1505a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int pcbFunc </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00468">468</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="comm__list_8c_source.html#l00704">blockPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00683">createPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00692">deletePCB()</a>, <a class="el" href="comm__vars_8h_source.html#l00004">EXTRA_PARAMETERS</a>, <a class="el" href="comm__list_8c_source.html#l00034">isEmpty()</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="comm__list_8c_source.html#l00619">resumePCB()</a>, <a class="el" href="serial_8c_source.html#l00059">serial_print()</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="comm__list_8c_source.html#l00640">setPriority()</a>, <a class="el" href="comm__list_8c_source.html#l00656">showAllProcesses()</a>, <a class="el" href="comm__list_8c_source.html#l00676">showBlockedProcesses()</a>, <a class="el" href="comm__list_8c_source.html#l00647">showPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00669">showReadyProcesses()</a>, <a class="el" href="string_8c_source.html#l00077">strcmp()</a>, <a class="el" href="comm__list_8c_source.html#l00598">suspendPCB()</a>, and <a class="el" href="comm__list_8c_source.html#l00717">unblockPCB()</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00172">initCmdArray()</a>.</p>
<div class="fragment"><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                           {</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--suspend&quot;</span>)) {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[1])) {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Missing name of PCB to suspend.&quot;</span>);</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[2]) &amp;&amp;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    (!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>))) {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <a class="code" href="comm__list_8c.html#adb12aae9347bfdc11c97b2c89c448ce2">suspendPCB</a>(&amp;parameters[2]);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <a class="code" href="comm__list_8c.html#adb12aae9347bfdc11c97b2c89c448ce2">suspendPCB</a>((&amp;parameters[2]));</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<a class="code" href="comm__vars_8h.html#a3d75ee5ce40f6fc7b3182661c2e11fde">EXTRA_PARAMETERS</a>);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(parameters[3]);</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            }</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        }</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--resume&quot;</span>)) {</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[1])) {</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Missing name of PCB to suspend.&quot;</span>);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[2]) &amp;&amp;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                    (!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>))) {</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                <a class="code" href="comm__list_8c.html#a672eae99ab4e3da15306bc6df644bb50">resumePCB</a>(&amp;parameters[2]);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <a class="code" href="comm__list_8c.html#a672eae99ab4e3da15306bc6df644bb50">resumePCB</a>((&amp;parameters[2]));</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<a class="code" href="comm__vars_8h.html#a3d75ee5ce40f6fc7b3182661c2e11fde">EXTRA_PARAMETERS</a>);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(parameters[3]);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<span class="stringliteral">&quot;\r\n&quot;</span>);            }</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--setpriority&quot;</span>)) {</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[4])) {</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Missing parameters.&quot;</span>);</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="keywordflow">if</span>((!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>)) &amp;&amp; (!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[3],<span class="stringliteral">&quot;--priority&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[3],<span class="stringliteral">&quot;-p&quot;</span>))) {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                <a class="code" href="comm__list_8c.html#ab805f90ac929c70cff3798e6de1f1381">setPriority</a>(parameters[2], parameters[4]);</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span>((!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[3],<span class="stringliteral">&quot;--name&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[3],<span class="stringliteral">&quot;-n&quot;</span>)) &amp;&amp; (!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--priority&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-p&quot;</span>))) {</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <a class="code" href="comm__list_8c.html#ab805f90ac929c70cff3798e6de1f1381">setPriority</a>(parameters[4], parameters[2]);</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%sProper command: &#39;pcb --setpriority -n \&quot;pcb name\&quot; -p \&quot;pcb priority\&quot;&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            }</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        }</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--show&quot;</span>)) {</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[2])) {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Missing name of pcb to show%s.\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>)) {</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                <a class="code" href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a>(&amp;parameters[2]);</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Type &#39;help pcb --show&#39; to see the arguments required.%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            }</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        }</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--showall&quot;</span>)) {</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[1])) {</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <a class="code" href="comm__list_8c.html#a15a1fce149a24a3c2925b6ca44cb79c7">showAllProcesses</a>(&amp;parameters[0]);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;No arguments required%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <a class="code" href="comm__list_8c.html#a15a1fce149a24a3c2925b6ca44cb79c7">showAllProcesses</a>(&amp;parameters[0]);</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        }</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--showready&quot;</span>)) {</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[1])) {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <a class="code" href="comm__list_8c.html#abc0ff5bef60dfc962f4455492297a191">showReadyProcesses</a>(&amp;parameters[0]);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;No arguments required%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            <a class="code" href="comm__list_8c.html#abc0ff5bef60dfc962f4455492297a191">showReadyProcesses</a>(&amp;parameters[0]);</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        }</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--showblocked&quot;</span>)) {</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[1])) {</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <a class="code" href="comm__list_8c.html#aea06cb173ad17f9139253574d010d678">showBlockedProcesses</a>(&amp;parameters[0]);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;No arguments required%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <a class="code" href="comm__list_8c.html#aea06cb173ad17f9139253574d010d678">showBlockedProcesses</a>(&amp;parameters[0]);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        }</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--create&quot;</span>)) {</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[6])) {</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Missing parameters of pcb to create%s.\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            <span class="keywordtype">char</span> * procName; <span class="keywordtype">char</span> * procPrio; <span class="keywordtype">char</span> * procClass;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            <span class="keywordtype">int</span> i = 0;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">for</span>(;!<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[i]); i++) {</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[i], <span class="stringliteral">&quot;--name&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[i],<span class="stringliteral">&quot;-n&quot;</span>)) {</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                    i++;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                    procName = parameters[i];</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[i], <span class="stringliteral">&quot;--priority&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[i],<span class="stringliteral">&quot;-p&quot;</span>)) {</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                    i++;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                    procPrio = parameters[i];</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[i], <span class="stringliteral">&quot;--class&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[i],<span class="stringliteral">&quot;-c&quot;</span>)) {</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                    i++;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                    procClass = parameters[i];</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                }</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            }</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <a class="code" href="comm__list_8c.html#af036a4bf4166ff125a281e01f6d2e84f">createPCB</a>(procName, procPrio, procClass);</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        }</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--delete&quot;</span>)) {</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[2])) {</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Missing name of pcb to create%s.\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>)) {</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                <a class="code" href="comm__list_8c.html#a3602fa2889ad77ef2f323f6db3dd967e">deletePCB</a>(&amp;parameters[2]);</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Type &#39;help pcb --delete&#39; to see the arguments required.%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            }</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        }</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--block&quot;</span>)) {</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[2])) {</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Missing name of pcb to create%s.\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>)) {</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <a class="code" href="comm__list_8c.html#af8c8690ef4431e1629f9ab7c5539eeae">blockPCB</a>(&amp;parameters[2]);</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Type &#39;help pcb --block&#39; to see the arguments required.%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            }</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        }</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--unblock&quot;</span>)) {</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a>(&amp;parameters[2])) {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Missing name of pcb to create%s.\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;-n&quot;</span>) || !<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;--name&quot;</span>)) {</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                <a class="code" href="comm__list_8c.html#ac26704b8c23bbe0e0fdf8e838915e29d">unblockPCB</a>(&amp;parameters[2]);</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Type &#39;help pcb --unblock&#39; to see the arguments required.%s\n&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            }</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    }</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;}</div><div class="ttc" id="comm__list_8c_html_a3602fa2889ad77ef2f323f6db3dd967e"><div class="ttname"><a href="comm__list_8c.html#a3602fa2889ad77ef2f323f6db3dd967e">deletePCB</a></div><div class="ttdeci">int deletePCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">deletePCB deletes the PCB requested by the user. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00692">comm_list.c:692</a></div></div>
<div class="ttc" id="comm__list_8c_html_af036a4bf4166ff125a281e01f6d2e84f"><div class="ttname"><a href="comm__list_8c.html#af036a4bf4166ff125a281e01f6d2e84f">createPCB</a></div><div class="ttdeci">int createPCB(const char *pcbName, const char *pcbPriority, const char *pcbClass)</div><div class="ttdoc">createPCB creates a new PCB and allocates memory for the PCB. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00683">comm_list.c:683</a></div></div>
<div class="ttc" id="comm__list_8c_html_af8c8690ef4431e1629f9ab7c5539eeae"><div class="ttname"><a href="comm__list_8c.html#af8c8690ef4431e1629f9ab7c5539eeae">blockPCB</a></div><div class="ttdeci">int blockPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">blockPCB blocks the specified PCB </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00704">comm_list.c:704</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="serial_8h_html_a995827efcd4dcfb780c9fbb9645410a4"><div class="ttname"><a href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a></div><div class="ttdeci">int serial_print(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00059">serial.c:59</a></div></div>
<div class="ttc" id="comm__list_8c_html_a9b84e5992ebbf428fc68351c9453e52e"><div class="ttname"><a href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a></div><div class="ttdeci">int showPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showPCB shows the process information for the process requested by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00647">comm_list.c:647</a></div></div>
<div class="ttc" id="comm__list_8c_html_a123c1c0d25a5a737a49a812d4bfd5d8d"><div class="ttname"><a href="comm__list_8c.html#a123c1c0d25a5a737a49a812d4bfd5d8d">isEmpty</a></div><div class="ttdeci">int isEmpty(char parameters[][MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00034">comm_list.c:34</a></div></div>
<div class="ttc" id="comm__list_8c_html_adb12aae9347bfdc11c97b2c89c448ce2"><div class="ttname"><a href="comm__list_8c.html#adb12aae9347bfdc11c97b2c89c448ce2">suspendPCB</a></div><div class="ttdeci">int suspendPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">suspendPCB suspends the pcb passed in by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00598">comm_list.c:598</a></div></div>
<div class="ttc" id="comm__list_8c_html_a672eae99ab4e3da15306bc6df644bb50"><div class="ttname"><a href="comm__list_8c.html#a672eae99ab4e3da15306bc6df644bb50">resumePCB</a></div><div class="ttdeci">int resumePCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">resumePCB resumes the PCB passed in by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00619">comm_list.c:619</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="comm__list_8c_html_abc0ff5bef60dfc962f4455492297a191"><div class="ttname"><a href="comm__list_8c.html#abc0ff5bef60dfc962f4455492297a191">showReadyProcesses</a></div><div class="ttdeci">int showReadyProcesses(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showReadyProcesses shows all processes that are ready, in the ready queue (linked list)...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00669">comm_list.c:669</a></div></div>
<div class="ttc" id="comm__list_8c_html_aea06cb173ad17f9139253574d010d678"><div class="ttname"><a href="comm__list_8c.html#aea06cb173ad17f9139253574d010d678">showBlockedProcesses</a></div><div class="ttdeci">int showBlockedProcesses(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showBlockedProcesses shows all processes that are blocked. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00676">comm_list.c:676</a></div></div>
<div class="ttc" id="comm__list_8c_html_a15a1fce149a24a3c2925b6ca44cb79c7"><div class="ttname"><a href="comm__list_8c.html#a15a1fce149a24a3c2925b6ca44cb79c7">showAllProcesses</a></div><div class="ttdeci">int showAllProcesses(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showAllProcesses shows all processes in the system. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00656">comm_list.c:656</a></div></div>
<div class="ttc" id="comm__list_8c_html_ac26704b8c23bbe0e0fdf8e838915e29d"><div class="ttname"><a href="comm__list_8c.html#ac26704b8c23bbe0e0fdf8e838915e29d">unblockPCB</a></div><div class="ttdeci">int unblockPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">unblockPCB unblocks the specified PCB. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00717">comm_list.c:717</a></div></div>
<div class="ttc" id="comm__list_8c_html_ab805f90ac929c70cff3798e6de1f1381"><div class="ttname"><a href="comm__list_8c.html#ab805f90ac929c70cff3798e6de1f1381">setPriority</a></div><div class="ttdeci">int setPriority(char *procName, char *procPrio)</div><div class="ttdoc">setPriority sets the priority of a particular process </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00640">comm_list.c:640</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
<div class="ttc" id="comm__vars_8h_html_a3d75ee5ce40f6fc7b3182661c2e11fde"><div class="ttname"><a href="comm__vars_8h.html#a3d75ee5ce40f6fc7b3182661c2e11fde">EXTRA_PARAMETERS</a></div><div class="ttdeci">#define EXTRA_PARAMETERS</div><div class="ttdef"><b>Definition:</b> <a href="comm__vars_8h_source.html#l00004">comm_vars.h:4</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a672eae99ab4e3da15306bc6df644bb50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int resumePCB </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>resumePCB resumes the PCB passed in by the user </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>- the rest of the input from the user, the name of the PCB to be resumed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00619">619</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00190">changeProcessSuspensionState()</a>, <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="pcb_8h_source.html#l00050">NOT_SUSPENDED</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="comm__list_8c_source.html#l00647">showPCB()</a>, and <a class="el" href="pcb_8h_source.html#l00039">SUCCESS</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                                             {</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a> retVal = <a class="code" href="pcb_8h.html#a6ab558a3fdd3e7d3e14064b1a9eee773">changeProcessSuspensionState</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)parameters[0], <a class="code" href="pcb_8h.html#a62786f54ed7251d1b1de61f23b707fc1a13635c2ef4530cf1d8ccbb10a80be35d">NOT_SUSPENDED</a>);</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordflow">if</span>(retVal == <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a>)</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    {</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <a class="code" href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a>(parameters);</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    }</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(retVal));</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="comment">//    const char* name = (const char*)parameters[0];</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">//    pcb_t* process = findPCB(name);</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="comment">//    e_PROCESS_STATE_t state = process-&gt;processState;</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment">//    if (state == READY)</span></div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;<span class="comment">//    {</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment">//        changeProcessState(name, RUNNING);</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment">//    }</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">//    else printf(&quot;%s&quot;, &quot;\nThe process must be in the ready state to resume.\n&quot;);</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">//    return 0;</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;}</div><div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="comm__list_8c_html_a9b84e5992ebbf428fc68351c9453e52e"><div class="ttname"><a href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a></div><div class="ttdeci">int showPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showPCB shows the process information for the process requested by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00647">comm_list.c:647</a></div></div>
<div class="ttc" id="pcb_8h_html_a62786f54ed7251d1b1de61f23b707fc1a13635c2ef4530cf1d8ccbb10a80be35d"><div class="ttname"><a href="pcb_8h.html#a62786f54ed7251d1b1de61f23b707fc1a13635c2ef4530cf1d8ccbb10a80be35d">NOT_SUSPENDED</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00050">pcb.h:50</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
<div class="ttc" id="pcb_8h_html_a6ab558a3fdd3e7d3e14064b1a9eee773"><div class="ttname"><a href="pcb_8h.html#a6ab558a3fdd3e7d3e14064b1a9eee773">changeProcessSuspensionState</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t changeProcessSuspensionState(const char *processName, e_PROCESS_SUSPENSION_STATE_t suspensionState)</div><div class="ttdoc">changeProcessSuspensionState </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00190">pcb.c:190</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t</div><div class="ttdoc">The e_PCB_ERROR_CODE_t enum defines the return status of functions working with PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abcb304e34ec42b6fa3df07249ce8c1b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setDate </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setDate sets the system date using the input from the user. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>take the unconsumed parameters from commhandler from the command prompt.</td></tr>
  </table>
  </dd>
</dl>
<p>Checks if the parameters exist, otherwise will return improper command. If paramters exist, will check to make sure the parameters are correct, such that the days and months are valid.</p>
<p>Calls set_date from rtc to set the current date. After setting the date, will print the current date.</p>
<p>Ex. Command is "date &ndash;set '03/12/2017', 03, 12 , 2017 are passed over. parameters[0] is the day parameters[1] is the month parameters[2] is the year </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00367">367</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="string_8c_source.html#l00046">atoi()</a>, <a class="el" href="comm__list_8c_source.html#l00361">getDate()</a>, <a class="el" href="comm__list_8c_source.html#l00014">getNumDaysInMonth()</a>, <a class="el" href="comm__vars_8h_source.html#l00002">IMPROPER_COMMAND</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="rtc_8c_source.html#l00079">set_date()</a>, and <a class="el" href="string_8c_source.html#l00010">strlen()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00350">date()</a>.</p>
<div class="fragment"><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                            {</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="comment">//printf(&quot;day %d %s, month %d %s, year %d %s\r\n&quot;, atoi(parameters[0]), parameters[0], atoi(parameters[1]), parameters[1], atoi(parameters[2]), parameters[2]);</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a>(parameters[2]) || !<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]) || !<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]) || !<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]))</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    {</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<a class="code" href="comm__vars_8h.html#adc0c870b429ed41ab22e23dbba9e6af1">IMPROPER_COMMAND</a>);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\r\nInvalid Parameters&quot;</span>);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordtype">int</span> daysInMonth = <a class="code" href="comm__list_8c.html#a63e5b5d633e0beec232fe5765124ad7e">getNumDaysInMonth</a>(<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]), <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]));</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">if</span>((<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]) &gt; 0) &amp;&amp; (daysInMonth &gt;= <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]))){</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <a class="code" href="rtc_8h.html#a7903b907981d739e3d156a964255d45e">set_date</a>(<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]), <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]), <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]));</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Double check the input parameters&quot;</span>);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;\033[38;2;255;0;255mTotal days in your selected month are:  %d UTC\r\n\033[38;2;255;255;255m&quot;</span>, daysInMonth);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    }</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <a class="code" href="comm__list_8c.html#affb6f9c7b2c1d585677a5bba1da35c06">getDate</a>();</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;}</div><div class="ttc" id="comm__list_8c_html_a63e5b5d633e0beec232fe5765124ad7e"><div class="ttname"><a href="comm__list_8c.html#a63e5b5d633e0beec232fe5765124ad7e">getNumDaysInMonth</a></div><div class="ttdeci">int getNumDaysInMonth(int month, int year)</div><div class="ttdoc">getNumDaysInMonth is a helper function to allow the easy retrieval of days in a month based on the mo...</div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00014">comm_list.c:14</a></div></div>
<div class="ttc" id="comm__list_8c_html_affb6f9c7b2c1d585677a5bba1da35c06"><div class="ttname"><a href="comm__list_8c.html#affb6f9c7b2c1d585677a5bba1da35c06">getDate</a></div><div class="ttdeci">void getDate()</div><div class="ttdoc">getDate Get the current date from the system. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00361">comm_list.c:361</a></div></div>
<div class="ttc" id="rtc_8h_html_a7903b907981d739e3d156a964255d45e"><div class="ttname"><a href="rtc_8h.html#a7903b907981d739e3d156a964255d45e">set_date</a></div><div class="ttdeci">void set_date(int day, int month, int year)</div><div class="ttdoc">set_date sets the RTC Date </div><div class="ttdef"><b>Definition:</b> <a href="rtc_8c_source.html#l00079">rtc.c:79</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="string_8h_html_a2dee044e4e667b5b789b493abd21cfa4"><div class="ttname"><a href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a></div><div class="ttdeci">int strlen(const char *s)</div><div class="ttdoc">strlen returns the length of a string </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00010">string.c:10</a></div></div>
<div class="ttc" id="string_8h_html_a30670a60464f77af17dfb353353d6df8"><div class="ttname"><a href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a></div><div class="ttdeci">int atoi(const char *s)</div><div class="ttdoc">atoi converts and ASCII string to an integer </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00046">string.c:46</a></div></div>
<div class="ttc" id="comm__vars_8h_html_adc0c870b429ed41ab22e23dbba9e6af1"><div class="ttname"><a href="comm__vars_8h.html#adc0c870b429ed41ab22e23dbba9e6af1">IMPROPER_COMMAND</a></div><div class="ttdeci">#define IMPROPER_COMMAND</div><div class="ttdef"><b>Definition:</b> <a href="comm__vars_8h_source.html#l00002">comm_vars.h:2</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab805f90ac929c70cff3798e6de1f1381"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int setPriority </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>procName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>procPrio</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setPriority sets the priority of a particular process </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">procName</td><td>is the process name to be modified </td></tr>
    <tr><td class="paramname">procPrio</td><td>is the new priority of the PCB </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0 procPrio is the process procName is the priority </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00640">640</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="string_8c_source.html#l00046">atoi()</a>, <a class="el" href="pcb_8c_source.html#l00342">changeProcessPriority()</a>, <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="pcb_8c_source.html#l00100">findPCB()</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, and <a class="el" href="pcb_8c_source.html#l00335">printPCBFunc()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                                                  {</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="comment">//serial_println(&quot;PRINTING OUT&quot;);</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(<a class="code" href="pcb_8h.html#a0f7e7192cbb11b1895d900faefac2472">changeProcessPriority</a>(procName, <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(procPrio))));</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="group___r2.html#ga819c31d0b376ca33ed371253585f9f80">printPCBFunc</a>((<span class="keywordtype">void</span>*)<a class="code" href="pcb_8h.html#a3ddbd6b7d5425cfb586dabc05862e9b1">findPCB</a>(procName));</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;}</div><div class="ttc" id="group___r2_html_ga819c31d0b376ca33ed371253585f9f80"><div class="ttname"><a href="group___r2.html#ga819c31d0b376ca33ed371253585f9f80">printPCBFunc</a></div><div class="ttdeci">void printPCBFunc(void *pcb)</div><div class="ttdoc">printPCBFunc prints the status of a process </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00335">pcb.c:335</a></div></div>
<div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="pcb_8h_html_a3ddbd6b7d5425cfb586dabc05862e9b1"><div class="ttname"><a href="pcb_8h.html#a3ddbd6b7d5425cfb586dabc05862e9b1">findPCB</a></div><div class="ttdeci">pcb_t * findPCB(const char *processName)</div><div class="ttdoc">findPCB will search all queues for the PCB with the input name </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00100">pcb.c:100</a></div></div>
<div class="ttc" id="pcb_8h_html_a0f7e7192cbb11b1895d900faefac2472"><div class="ttname"><a href="pcb_8h.html#a0f7e7192cbb11b1895d900faefac2472">changeProcessPriority</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t changeProcessPriority(const char *procName, processPriority_t newPriority)</div><div class="ttdoc">changeProcessPriority </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00342">pcb.c:342</a></div></div>
<div class="ttc" id="string_8h_html_a30670a60464f77af17dfb353353d6df8"><div class="ttname"><a href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a></div><div class="ttdeci">int atoi(const char *s)</div><div class="ttdoc">atoi converts and ASCII string to an integer </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00046">string.c:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a684ac3c738428c05031f6b5c5b121d85"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setTime </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setTime sets the current system time from the users input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>take the unconsumed parameters from commhandler from the command prompt.</td></tr>
  </table>
  </dd>
</dl>
<p>Calls set_time from rtc to set the sytem time. Then prints out the current time.</p>
<p>Ex. Command is "time &ndash;set '14:20.55', 14, 20 , 55 are passed over. parameters[1] is the hour (24 hour) parameters[2] is the minute parameters[3] is the second </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00414">414</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="string_8c_source.html#l00046">atoi()</a>, <a class="el" href="comm__list_8c_source.html#l00404">getTime()</a>, <a class="el" href="comm__vars_8h_source.html#l00002">IMPROPER_COMMAND</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="rtc_8c_source.html#l00033">set_time()</a>, and <a class="el" href="string_8c_source.html#l00010">strlen()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00393">time()</a>.</p>
<div class="fragment"><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                            {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a>(parameters[2]) || !<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]) || !<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]) || !<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]))</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<a class="code" href="comm__vars_8h.html#adc0c870b429ed41ab22e23dbba9e6af1">IMPROPER_COMMAND</a>);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\r\nInvalid Parameters&quot;</span>);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]) &lt; 0 || <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]) &gt; 24 || <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]) &lt; 0 || <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]) &gt; 59 || <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]) &lt; 0 || <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]) &gt; 59) {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Double check the input parameters&quot;</span>);</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;Make sure 0 HH 24 and 0 MM 59 and 0 SS 59&quot;</span>);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <a class="code" href="rtc_8h.html#a9f75815e4f89e0ff7065999f43867e92">set_time</a>(<a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[0]), <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[1]), <a class="code" href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a>(parameters[2]));</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        }</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    }</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <a class="code" href="comm__list_8c.html#a1c7c164fd3c7dea7004ece3c6251fc94">getTime</a>();</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;}</div><div class="ttc" id="rtc_8h_html_a9f75815e4f89e0ff7065999f43867e92"><div class="ttname"><a href="rtc_8h.html#a9f75815e4f89e0ff7065999f43867e92">set_time</a></div><div class="ttdeci">void set_time(int hours, int minutes, int seconds)</div><div class="ttdoc">set_time sets the RTC time. Military time </div><div class="ttdef"><b>Definition:</b> <a href="rtc_8c_source.html#l00033">rtc.c:33</a></div></div>
<div class="ttc" id="comm__list_8c_html_a1c7c164fd3c7dea7004ece3c6251fc94"><div class="ttname"><a href="comm__list_8c.html#a1c7c164fd3c7dea7004ece3c6251fc94">getTime</a></div><div class="ttdeci">void getTime()</div><div class="ttdoc">getTime this function has the side-effect of printing the current time to the terminal. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00404">comm_list.c:404</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="string_8h_html_a2dee044e4e667b5b789b493abd21cfa4"><div class="ttname"><a href="string_8h.html#a2dee044e4e667b5b789b493abd21cfa4">strlen</a></div><div class="ttdeci">int strlen(const char *s)</div><div class="ttdoc">strlen returns the length of a string </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00010">string.c:10</a></div></div>
<div class="ttc" id="string_8h_html_a30670a60464f77af17dfb353353d6df8"><div class="ttname"><a href="string_8h.html#a30670a60464f77af17dfb353353d6df8">atoi</a></div><div class="ttdeci">int atoi(const char *s)</div><div class="ttdoc">atoi converts and ASCII string to an integer </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00046">string.c:46</a></div></div>
<div class="ttc" id="comm__vars_8h_html_adc0c870b429ed41ab22e23dbba9e6af1"><div class="ttname"><a href="comm__vars_8h.html#adc0c870b429ed41ab22e23dbba9e6af1">IMPROPER_COMMAND</a></div><div class="ttdeci">#define IMPROPER_COMMAND</div><div class="ttdef"><b>Definition:</b> <a href="comm__vars_8h_source.html#l00002">comm_vars.h:2</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a15a1fce149a24a3c2925b6ca44cb79c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int showAllProcesses </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>showAllProcesses shows all processes in the system. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00656">656</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00004">blockedQueue</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="linked__list_8c_source.html#l00212">printList()</a>, <a class="el" href="pcb_8c_source.html#l00003">readyQueue</a>, <a class="el" href="pcb_8c_source.html#l00006">suspendedBlockedQueue</a>, and <a class="el" href="pcb_8c_source.html#l00005">suspendedReadyQueue</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                                                    {</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    (void)parameters;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;\n\nReady Queue:%s&quot;</span>,<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    <a class="code" href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a>(&amp;<a class="code" href="pcb_8h.html#a7b1bca867586a0a58222b805dbe3be28">readyQueue</a>);</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;\n\nBlocked Queue:%s&quot;</span>,<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <a class="code" href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a>(&amp;<a class="code" href="pcb_8h.html#aa3eb63b40a5cf1eb03b494f7ddd1af2a">blockedQueue</a>);</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;\n\nSuspended-Ready Queue:%s&quot;</span>,<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <a class="code" href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a>(&amp;<a class="code" href="pcb_8h.html#a95c66b02e576aabe04df3fdc9e981fc3">suspendedReadyQueue</a>);</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;\n\nSuspended-Blocked Queue:%s&quot;</span>,<span class="stringliteral">&quot;\r\n&quot;</span>);</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    <a class="code" href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a>(&amp;<a class="code" href="pcb_8h.html#ae83c9a71ab217215db8dfe3eb9c94e8e">suspendedBlockedQueue</a>);</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;}</div><div class="ttc" id="pcb_8h_html_a7b1bca867586a0a58222b805dbe3be28"><div class="ttname"><a href="pcb_8h.html#a7b1bca867586a0a58222b805dbe3be28">readyQueue</a></div><div class="ttdeci">linkedList_t readyQueue</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00003">pcb.c:3</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="pcb_8h_html_aa3eb63b40a5cf1eb03b494f7ddd1af2a"><div class="ttname"><a href="pcb_8h.html#aa3eb63b40a5cf1eb03b494f7ddd1af2a">blockedQueue</a></div><div class="ttdeci">linkedList_t blockedQueue</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00004">pcb.c:4</a></div></div>
<div class="ttc" id="linked__list_8h_html_a9bbec3837a303ae4bbc5eafb23ead2d5"><div class="ttname"><a href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a></div><div class="ttdeci">void printList(linkedList_t *list)</div><div class="ttdoc">test function to show list functionality. uses const char* as test data </div><div class="ttdef"><b>Definition:</b> <a href="linked__list_8c_source.html#l00212">linked_list.c:212</a></div></div>
<div class="ttc" id="pcb_8h_html_ae83c9a71ab217215db8dfe3eb9c94e8e"><div class="ttname"><a href="pcb_8h.html#ae83c9a71ab217215db8dfe3eb9c94e8e">suspendedBlockedQueue</a></div><div class="ttdeci">linkedList_t suspendedBlockedQueue</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00006">pcb.c:6</a></div></div>
<div class="ttc" id="pcb_8h_html_a95c66b02e576aabe04df3fdc9e981fc3"><div class="ttname"><a href="pcb_8h.html#a95c66b02e576aabe04df3fdc9e981fc3">suspendedReadyQueue</a></div><div class="ttdeci">linkedList_t suspendedReadyQueue</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00005">pcb.c:5</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aea06cb173ad17f9139253574d010d678"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int showBlockedProcesses </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>showBlockedProcesses shows all processes that are blocked. </p>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00676">676</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00004">blockedQueue</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, and <a class="el" href="linked__list_8c_source.html#l00212">printList()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                                                        {</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    (void)parameters;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s&quot;</span>, <span class="stringliteral">&quot;\n\nBlocked Queue:\n&quot;</span>);</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <a class="code" href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a>(&amp;<a class="code" href="pcb_8h.html#aa3eb63b40a5cf1eb03b494f7ddd1af2a">blockedQueue</a>);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;}</div><div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="pcb_8h_html_aa3eb63b40a5cf1eb03b494f7ddd1af2a"><div class="ttname"><a href="pcb_8h.html#aa3eb63b40a5cf1eb03b494f7ddd1af2a">blockedQueue</a></div><div class="ttdeci">linkedList_t blockedQueue</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00004">pcb.c:4</a></div></div>
<div class="ttc" id="linked__list_8h_html_a9bbec3837a303ae4bbc5eafb23ead2d5"><div class="ttname"><a href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a></div><div class="ttdeci">void printList(linkedList_t *list)</div><div class="ttdoc">test function to show list functionality. uses const char* as test data </div><div class="ttdef"><b>Definition:</b> <a href="linked__list_8c_source.html#l00212">linked_list.c:212</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9b84e5992ebbf428fc68351c9453e52e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int showPCB </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>showPCB shows the process information for the process requested by the user </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>the name of the PCB to show the information of. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00647">647</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="pcb_8c_source.html#l00100">findPCB()</a>, <a class="el" href="pcb_8c_source.html#l00013">prevPCBError</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, and <a class="el" href="pcb_8c_source.html#l00335">printPCBFunc()</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00704">blockPCB()</a>, <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>, <a class="el" href="comm__list_8c_source.html#l00619">resumePCB()</a>, <a class="el" href="comm__list_8c_source.html#l00598">suspendPCB()</a>, and <a class="el" href="comm__list_8c_source.html#l00717">unblockPCB()</a>.</p>
<div class="fragment"><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                                           {</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <a class="code" href="structpcb__t.html">pcb_t</a>* process = <a class="code" href="pcb_8h.html#a3ddbd6b7d5425cfb586dabc05862e9b1">findPCB</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)parameters[0]);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordflow">if</span>(!process) { <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(<a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>)); <span class="keywordflow">return</span> <a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>; }</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <a class="code" href="group___r2.html#ga819c31d0b376ca33ed371253585f9f80">printPCBFunc</a>((<span class="keywordtype">void</span>*)process);</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a>;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;}</div><div class="ttc" id="pcb_8h_html_a8e319ed5099e8558e03c1bdd25c9559a"><div class="ttname"><a href="pcb_8h.html#a8e319ed5099e8558e03c1bdd25c9559a">prevPCBError</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t prevPCBError</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00013">pcb.c:13</a></div></div>
<div class="ttc" id="group___r2_html_ga819c31d0b376ca33ed371253585f9f80"><div class="ttname"><a href="group___r2.html#ga819c31d0b376ca33ed371253585f9f80">printPCBFunc</a></div><div class="ttdeci">void printPCBFunc(void *pcb)</div><div class="ttdoc">printPCBFunc prints the status of a process </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00335">pcb.c:335</a></div></div>
<div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="pcb_8h_html_a3ddbd6b7d5425cfb586dabc05862e9b1"><div class="ttname"><a href="pcb_8h.html#a3ddbd6b7d5425cfb586dabc05862e9b1">findPCB</a></div><div class="ttdeci">pcb_t * findPCB(const char *processName)</div><div class="ttdoc">findPCB will search all queues for the PCB with the input name </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00100">pcb.c:100</a></div></div>
<div class="ttc" id="structpcb__t_html"><div class="ttname"><a href="structpcb__t.html">pcb_t</a></div><div class="ttdoc">typedef for pcb_t struct </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abc0ff5bef60dfc962f4455492297a191"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int showReadyProcesses </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>showReadyProcesses shows all processes that are ready, in the ready queue (linked list). </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00669">669</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="linked__list_8c_source.html#l00212">printList()</a>, and <a class="el" href="pcb_8c_source.html#l00003">readyQueue</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                                                      {</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    (void)parameters;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;%s&quot;</span>, <span class="stringliteral">&quot;\n\nReady Queue:\n&quot;</span>);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <a class="code" href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a>(&amp;<a class="code" href="pcb_8h.html#a7b1bca867586a0a58222b805dbe3be28">readyQueue</a>);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;}</div><div class="ttc" id="pcb_8h_html_a7b1bca867586a0a58222b805dbe3be28"><div class="ttname"><a href="pcb_8h.html#a7b1bca867586a0a58222b805dbe3be28">readyQueue</a></div><div class="ttdeci">linkedList_t readyQueue</div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00003">pcb.c:3</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="linked__list_8h_html_a9bbec3837a303ae4bbc5eafb23ead2d5"><div class="ttname"><a href="linked__list_8h.html#a9bbec3837a303ae4bbc5eafb23ead2d5">printList</a></div><div class="ttdeci">void printList(linkedList_t *list)</div><div class="ttdoc">test function to show list functionality. uses const char* as test data </div><div class="ttdef"><b>Definition:</b> <a href="linked__list_8c_source.html#l00212">linked_list.c:212</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a514416c2792fdc8614585266d618fbf8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int shutdownFunc </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>shutdownFunc shuts down the OS. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>the input from the user </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, if the user confirms to shutdown will return 9, otherwise will return 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00435">435</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="commhand_8c_source.html#l00007">in_string</a>, <a class="el" href="input_8h_source.html#l00006">MAX_LENGTH</a>, <a class="el" href="serial_8c_source.html#l00114">serial_poll()</a>, <a class="el" href="serial_8c_source.html#l00059">serial_print()</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">sprintf()</a>, and <a class="el" href="string_8c_source.html#l00077">strcmp()</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00172">initCmdArray()</a>.</p>
<div class="fragment"><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                                                {</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordtype">int</span> retVal = 0;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordtype">char</span> buf[500]; <a class="code" href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">\</a></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<a class="code" href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">    sprintf</a>(buf, 500, <span class="stringliteral">&quot;\033[38;2;255;0;255mShutdown called\r\n\033[38;2;255;255;255m&quot;</span>); <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">\</a></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22"></a></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">    serial_println</a>(<span class="stringliteral">&quot;Shutdown was called.\r\n&quot;</span>);</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[1],<span class="stringliteral">&quot;&quot;</span>)==0) {</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordtype">int</span> confirm = 0;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keywordtype">char</span> <a class="code" href="commhand_8c.html#a304f731e770f19e932c39d189c8cb56f">in_string</a>[<a class="code" href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a>];</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<span class="stringliteral">&quot;Confirm shutdown y/n?: &quot;</span>);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="keywordflow">if</span>(confirm == 0) {</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<span class="stringliteral">&quot;&quot;</span>);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <a class="code" href="serial_8h.html#a4b7cdfe478986c0d41a54f2c4a683136">serial_poll</a>(in_string);</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(in_string, <span class="stringliteral">&quot;y&quot;</span>)==0)</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                confirm = 1;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(in_string, <span class="stringliteral">&quot;n&quot;</span>)==0)</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                confirm = 2;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        }</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keywordflow">if</span>(confirm == 1)</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            retVal = 9;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;UNKNOWN_COMMAND&quot;</span>);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    }</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;}</div><div class="ttc" id="input_8h_html_a7a9a231e30b47bc0345749c8bd1e5077"><div class="ttname"><a href="input_8h.html#a7a9a231e30b47bc0345749c8bd1e5077">MAX_LENGTH</a></div><div class="ttdeci">#define MAX_LENGTH</div><div class="ttdef"><b>Definition:</b> <a href="input_8h_source.html#l00006">input.h:6</a></div></div>
<div class="ttc" id="serial_8h_html_a995827efcd4dcfb780c9fbb9645410a4"><div class="ttname"><a href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a></div><div class="ttdeci">int serial_print(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00059">serial.c:59</a></div></div>
<div class="ttc" id="commhand_8c_html_a304f731e770f19e932c39d189c8cb56f"><div class="ttname"><a href="commhand_8c.html#a304f731e770f19e932c39d189c8cb56f">in_string</a></div><div class="ttdeci">char in_string[MAX_LENGTH]</div><div class="ttdef"><b>Definition:</b> <a href="commhand_8c_source.html#l00007">commhand.c:7</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="serial_8h_html_a4b7cdfe478986c0d41a54f2c4a683136"><div class="ttname"><a href="serial_8h.html#a4b7cdfe478986c0d41a54f2c4a683136">serial_poll</a></div><div class="ttdeci">char * serial_poll(char in_string[MAX_LENGTH])</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00114">serial.c:114</a></div></div>
<div class="ttc" id="string_8h_html_ae9cac82f3293a00d8ec8705a3fc5cf64"><div class="ttname"><a href="string_8h.html#ae9cac82f3293a00d8ec8705a3fc5cf64">sprintf</a></div><div class="ttdeci">int sprintf(char *str, int bufLength, const char *format,...) __attribute__((format(printf</div><div class="ttdoc">sprintf print with format to specified string buffer </div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="adb12aae9347bfdc11c97b2c89c448ce2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int suspendPCB </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>suspendPCB suspends the pcb passed in by the user </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in the name of the PCB to be suspended. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an integer, normally 0. </dd></dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00598">598</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00190">changeProcessSuspensionState()</a>, <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="comm__list_8c_source.html#l00647">showPCB()</a>, <a class="el" href="pcb_8h_source.html#l00039">SUCCESS</a>, and <a class="el" href="pcb_8h_source.html#l00050">SUSPENDED</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                                              {</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a> retVal = <a class="code" href="pcb_8h.html#a6ab558a3fdd3e7d3e14064b1a9eee773">changeProcessSuspensionState</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)parameters[0], <a class="code" href="pcb_8h.html#a62786f54ed7251d1b1de61f23b707fc1a1c2114335a42993ac5cc5dbf65f83d41">SUSPENDED</a>);</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">if</span>(retVal == <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a>)</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <a class="code" href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a>(parameters);</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(retVal));</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment">//    const char* name = (const char*)parameters[0];</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="comment">//    pcb_t* process = findPCB(name);</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment">//    e_PROCESS_STATE_t state = process-&gt;processState;</span></div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment">//    if (state == READY || state == RUNNING)</span></div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">//    {</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">//        changeProcessState(name, BLOCKED);</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">//    }</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment">//    else printf(&quot;%s&quot;, &quot;\nThe process needs to either be in the ready or the running state to suspend.\n&quot;);</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="comment">//    return 0;</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;}</div><div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="pcb_8h_html_a62786f54ed7251d1b1de61f23b707fc1a1c2114335a42993ac5cc5dbf65f83d41"><div class="ttname"><a href="pcb_8h.html#a62786f54ed7251d1b1de61f23b707fc1a1c2114335a42993ac5cc5dbf65f83d41">SUSPENDED</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00050">pcb.h:50</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="comm__list_8c_html_a9b84e5992ebbf428fc68351c9453e52e"><div class="ttname"><a href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a></div><div class="ttdeci">int showPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showPCB shows the process information for the process requested by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00647">comm_list.c:647</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
<div class="ttc" id="pcb_8h_html_a6ab558a3fdd3e7d3e14064b1a9eee773"><div class="ttname"><a href="pcb_8h.html#a6ab558a3fdd3e7d3e14064b1a9eee773">changeProcessSuspensionState</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t changeProcessSuspensionState(const char *processName, e_PROCESS_SUSPENSION_STATE_t suspensionState)</div><div class="ttdoc">changeProcessSuspensionState </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00190">pcb.c:190</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t</div><div class="ttdoc">The e_PCB_ERROR_CODE_t enum defines the return status of functions working with PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5dac732108bdce081376535bd2d51221"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int time </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00393">393</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="comm__list_8c_source.html#l00404">getTime()</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, <a class="el" href="comm__list_8c_source.html#l00414">setTime()</a>, and <a class="el" href="string_8c_source.html#l00077">strcmp()</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00172">initCmdArray()</a>.</p>
<div class="fragment"><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                        {</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--get&quot;</span>)) {</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <a class="code" href="comm__list_8c.html#a1c7c164fd3c7dea7004ece3c6251fc94">getTime</a>();</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span>(!<a class="code" href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a>(parameters[0],<span class="stringliteral">&quot;--set&quot;</span>)) {</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <a class="code" href="comm__list_8c.html#a684ac3c738428c05031f6b5c5b121d85">setTime</a>(&amp;parameters[1]);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot;ERROR HAS BEEN NOTICED&quot;</span>);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;}</div><div class="ttc" id="comm__list_8c_html_a1c7c164fd3c7dea7004ece3c6251fc94"><div class="ttname"><a href="comm__list_8c.html#a1c7c164fd3c7dea7004ece3c6251fc94">getTime</a></div><div class="ttdeci">void getTime()</div><div class="ttdoc">getTime this function has the side-effect of printing the current time to the terminal. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00404">comm_list.c:404</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="string_8h_html_a11bd144d7d44914099a3aeddf1c8567d"><div class="ttname"><a href="string_8h.html#a11bd144d7d44914099a3aeddf1c8567d">strcmp</a></div><div class="ttdeci">int strcmp(const char *s1, const char *s2)</div><div class="ttdoc">strcmp compares two strings. </div><div class="ttdef"><b>Definition:</b> <a href="string_8c_source.html#l00077">string.c:77</a></div></div>
<div class="ttc" id="comm__list_8c_html_a684ac3c738428c05031f6b5c5b121d85"><div class="ttname"><a href="comm__list_8c.html#a684ac3c738428c05031f6b5c5b121d85">setTime</a></div><div class="ttdeci">void setTime(char parameters[][MAX_LENGTH])</div><div class="ttdoc">setTime sets the current system time from the users input. </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00414">comm_list.c:414</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac26704b8c23bbe0e0fdf8e838915e29d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int unblockPCB </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>unblockPCB unblocks the specified PCB. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>takes in the name of the PCB to move from the blocked queue to the ready queue. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00717">717</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="pcb_8c_source.html#l00168">changeProcessState()</a>, <a class="el" href="pcb_8c_source.html#l00267">errorToString()</a>, <a class="el" href="string_8h_source.html#l00112">printf</a>, <a class="el" href="pcb_8h_source.html#l00048">READY</a>, <a class="el" href="comm__list_8c_source.html#l00647">showPCB()</a>, and <a class="el" href="pcb_8h_source.html#l00039">SUCCESS</a>.</p>

<p>Referenced by <a class="el" href="comm__list_8c_source.html#l00468">pcbFunc()</a>.</p>
<div class="fragment"><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                                              {</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a> retVal = <a class="code" href="group___r2.html#ga69ffbf50820bccd94857e1d25b68b2c3">changeProcessState</a>((<span class="keyword">const</span> <span class="keywordtype">char</span>*)parameters[0], <a class="code" href="pcb_8h.html#a8461d6c03c00b03bad59b5a29d27b902a6564f2f3e15be06b670547bbcaaf0798">READY</a>);</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <span class="keywordflow">if</span>(retVal == <a class="code" href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a>)</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    {</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <a class="code" href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a>(parameters);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    }</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <a class="code" href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a>(<span class="stringliteral">&quot;Status: %s\r\n&quot;</span>, <a class="code" href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a>(retVal));</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment">//    const char* name = (const char*)parameters[0];</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment">//    changeProcessState(name, READY);</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment">//    return 0;</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;}</div><div class="ttc" id="pcb_8h_html_a8461d6c03c00b03bad59b5a29d27b902a6564f2f3e15be06b670547bbcaaf0798"><div class="ttname"><a href="pcb_8h.html#a8461d6c03c00b03bad59b5a29d27b902a6564f2f3e15be06b670547bbcaaf0798">READY</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00048">pcb.h:48</a></div></div>
<div class="ttc" id="group___r2_html_ga834927e89e94c123a0ec5322b11b0161"><div class="ttname"><a href="group___r2.html#ga834927e89e94c123a0ec5322b11b0161">errorToString</a></div><div class="ttdeci">const char * errorToString(e_PCB_ERROR_CODE_t error)</div><div class="ttdoc">errorToString creates a string form of the error passed in </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00267">pcb.c:267</a></div></div>
<div class="ttc" id="string_8h_html_a0f459d16901ef591acaafa4b67fd4be5"><div class="ttname"><a href="string_8h.html#a0f459d16901ef591acaafa4b67fd4be5">printf</a></div><div class="ttdeci">#define printf(format,...)</div><div class="ttdoc">printf is simply a wrapper macro around sprintf with built in terminal print builtin needs to be a ma...</div><div class="ttdef"><b>Definition:</b> <a href="string_8h_source.html#l00112">string.h:112</a></div></div>
<div class="ttc" id="comm__list_8c_html_a9b84e5992ebbf428fc68351c9453e52e"><div class="ttname"><a href="comm__list_8c.html#a9b84e5992ebbf428fc68351c9453e52e">showPCB</a></div><div class="ttdeci">int showPCB(char parameters[][MAX_LENGTH])</div><div class="ttdoc">showPCB shows the process information for the process requested by the user </div><div class="ttdef"><b>Definition:</b> <a href="comm__list_8c_source.html#l00647">comm_list.c:647</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8eac7f69f7c9e5aea9b8f54cf02870e2bf8">SUCCESS</a></div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
<div class="ttc" id="pcb_8h_html_a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e"><div class="ttname"><a href="pcb_8h.html#a7e8c3ee6ff86c6b9d8fd0d2418cc2f8e">e_PCB_ERROR_CODE_t</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t</div><div class="ttdoc">The e_PCB_ERROR_CODE_t enum defines the return status of functions working with PCBs. </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8h_source.html#l00039">pcb.h:39</a></div></div>
<div class="ttc" id="group___r2_html_ga69ffbf50820bccd94857e1d25b68b2c3"><div class="ttname"><a href="group___r2.html#ga69ffbf50820bccd94857e1d25b68b2c3">changeProcessState</a></div><div class="ttdeci">e_PCB_ERROR_CODE_t changeProcessState(const char *processName, e_PROCESS_STATE_t state)</div><div class="ttdoc">changeProcessState changes the state of the process being called </div><div class="ttdef"><b>Definition:</b> <a href="pcb_8c_source.html#l00168">pcb.c:168</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab21bb30658e69c3d4906e435384fa5fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int version </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>parameters</em>[][MAX_LENGTH]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>version prints out the current version of the operating system. It will print out R1, R2, R3, ... depending on the current module. </p>
<p>No parameters are required. </p>

<p>Definition at line <a class="el" href="comm__list_8c_source.html#l00339">339</a> of file <a class="el" href="comm__list_8c_source.html">comm_list.c</a>.</p>

<p>References <a class="el" href="serial_8c_source.html#l00059">serial_print()</a>, <a class="el" href="serial_8c_source.html#l00044">serial_println()</a>, and <a class="el" href="comm__vars_8h_source.html#l00001">VERSION</a>.</p>

<p>Referenced by <a class="el" href="commhand_8c_source.html#l00172">initCmdArray()</a>.</p>
<div class="fragment"><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                                           {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    (void)parameters;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<span class="stringliteral">&quot;Version: &quot;</span>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a>(<a class="code" href="comm__vars_8h.html#a1c6d5de492ac61ad29aec7aa9a436bbf">VERSION</a>);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a>(<span class="stringliteral">&quot; &quot;</span>);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="ttc" id="serial_8h_html_a995827efcd4dcfb780c9fbb9645410a4"><div class="ttname"><a href="serial_8h.html#a995827efcd4dcfb780c9fbb9645410a4">serial_print</a></div><div class="ttdeci">int serial_print(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00059">serial.c:59</a></div></div>
<div class="ttc" id="serial_8h_html_a3514f7abff236a4e00a6c46021ce5e22"><div class="ttname"><a href="serial_8h.html#a3514f7abff236a4e00a6c46021ce5e22">serial_println</a></div><div class="ttdeci">int serial_println(const char *msg)</div><div class="ttdef"><b>Definition:</b> <a href="serial_8c_source.html#l00044">serial.c:44</a></div></div>
<div class="ttc" id="comm__vars_8h_html_a1c6d5de492ac61ad29aec7aa9a436bbf"><div class="ttname"><a href="comm__vars_8h.html#a1c6d5de492ac61ad29aec7aa9a436bbf">VERSION</a></div><div class="ttdeci">#define VERSION</div><div class="ttdef"><b>Definition:</b> <a href="comm__vars_8h_source.html#l00001">comm_vars.h:1</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a7ec0161c488281f85601e9f92d9226bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structs__cmd__struct.html">s_cmd_struct</a> __attribute__</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5582c68677f88e6cacb6b1a2086f34c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="comm__list_8h.html#a99317249ae7aceea39e3c447270bc2b6">cmd_struct_t</a> cmdArray[<a class="el" href="comm__list_8h.html#a13a1c44288a1d29092e5a6fb152b4861">MAX_CMD_LIST_LENGTH</a>]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="commhand_8c_source.html#l00013">13</a> of file <a class="el" href="commhand_8c_source.html">commhand.c</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c7d74c6d2b184af75c765a147f90e5a0.html">mpx_core</a></li><li class="navelem"><a class="el" href="dir_a6b7560d91d85e776e1ad77161c04894.html">modules</a></li><li class="navelem"><a class="el" href="dir_e61e803243efb3b270da167213e1d8c2.html">R1</a></li><li class="navelem"><a class="el" href="dir_a58fc58dbb9b6123981aa6a673112028.html">include</a></li><li class="navelem"><a class="el" href="comm__list_8h.html">comm_list.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
